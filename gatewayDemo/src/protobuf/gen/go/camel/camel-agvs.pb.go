// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: protobuf/camel-agvs.proto

package camel

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CamelMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Onlyone:
	//
	//	*CamelMessage_AllowFromAgvs_
	//	*CamelMessage_ReportToAgvs_
	//	*CamelMessage_MissonFromAgvs_
	//	*CamelMessage_RequestToAgvs_
	//	*CamelMessage_AvoidAreaFromAgvs_
	//	*CamelMessage_RequestFromAgvs_
	//	*CamelMessage_Collaborative
	//	*CamelMessage_PeriodDataToAgvs_
	//	*CamelMessage_PeriodDataFromAgvs_
	Onlyone isCamelMessage_Onlyone `protobuf_oneof:"onlyone"`
}

func (x *CamelMessage) Reset() {
	*x = CamelMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_agvs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CamelMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CamelMessage) ProtoMessage() {}

func (x *CamelMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_agvs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CamelMessage.ProtoReflect.Descriptor instead.
func (*CamelMessage) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_agvs_proto_rawDescGZIP(), []int{0}
}

func (m *CamelMessage) GetOnlyone() isCamelMessage_Onlyone {
	if m != nil {
		return m.Onlyone
	}
	return nil
}

func (x *CamelMessage) GetAllowFromAgvs() *CamelMessage_AllowFromAgvs {
	if x, ok := x.GetOnlyone().(*CamelMessage_AllowFromAgvs_); ok {
		return x.AllowFromAgvs
	}
	return nil
}

func (x *CamelMessage) GetReportToAgvs() *CamelMessage_ReportToAgvs {
	if x, ok := x.GetOnlyone().(*CamelMessage_ReportToAgvs_); ok {
		return x.ReportToAgvs
	}
	return nil
}

func (x *CamelMessage) GetMissonFromAgvs() *CamelMessage_MissonFromAgvs {
	if x, ok := x.GetOnlyone().(*CamelMessage_MissonFromAgvs_); ok {
		return x.MissonFromAgvs
	}
	return nil
}

func (x *CamelMessage) GetRequestToAgvs() *CamelMessage_RequestToAgvs {
	if x, ok := x.GetOnlyone().(*CamelMessage_RequestToAgvs_); ok {
		return x.RequestToAgvs
	}
	return nil
}

func (x *CamelMessage) GetAvoidAreaFromAgvs() *CamelMessage_AvoidAreaFromAgvs {
	if x, ok := x.GetOnlyone().(*CamelMessage_AvoidAreaFromAgvs_); ok {
		return x.AvoidAreaFromAgvs
	}
	return nil
}

func (x *CamelMessage) GetRequestFromAgvs() *CamelMessage_RequestFromAgvs {
	if x, ok := x.GetOnlyone().(*CamelMessage_RequestFromAgvs_); ok {
		return x.RequestFromAgvs
	}
	return nil
}

func (x *CamelMessage) GetCollaborative() *Collaborative {
	if x, ok := x.GetOnlyone().(*CamelMessage_Collaborative); ok {
		return x.Collaborative
	}
	return nil
}

func (x *CamelMessage) GetPeriodDataToAgvs() *CamelMessage_PeriodDataToAgvs {
	if x, ok := x.GetOnlyone().(*CamelMessage_PeriodDataToAgvs_); ok {
		return x.PeriodDataToAgvs
	}
	return nil
}

func (x *CamelMessage) GetPeriodDataFromAgvs() *CamelMessage_PeriodDataFromAgvs {
	if x, ok := x.GetOnlyone().(*CamelMessage_PeriodDataFromAgvs_); ok {
		return x.PeriodDataFromAgvs
	}
	return nil
}

type isCamelMessage_Onlyone interface {
	isCamelMessage_Onlyone()
}

type CamelMessage_AllowFromAgvs_ struct {
	AllowFromAgvs *CamelMessage_AllowFromAgvs `protobuf:"bytes,1,opt,name=allowFromAgvs,proto3,oneof"`
}

type CamelMessage_ReportToAgvs_ struct {
	ReportToAgvs *CamelMessage_ReportToAgvs `protobuf:"bytes,2,opt,name=reportToAgvs,proto3,oneof"`
}

type CamelMessage_MissonFromAgvs_ struct {
	MissonFromAgvs *CamelMessage_MissonFromAgvs `protobuf:"bytes,3,opt,name=missonFromAgvs,proto3,oneof"`
}

type CamelMessage_RequestToAgvs_ struct {
	RequestToAgvs *CamelMessage_RequestToAgvs `protobuf:"bytes,4,opt,name=requestToAgvs,proto3,oneof"`
}

type CamelMessage_AvoidAreaFromAgvs_ struct {
	AvoidAreaFromAgvs *CamelMessage_AvoidAreaFromAgvs `protobuf:"bytes,5,opt,name=avoidAreaFromAgvs,proto3,oneof"`
}

type CamelMessage_RequestFromAgvs_ struct {
	RequestFromAgvs *CamelMessage_RequestFromAgvs `protobuf:"bytes,6,opt,name=requestFromAgvs,proto3,oneof"`
}

type CamelMessage_Collaborative struct {
	Collaborative *Collaborative `protobuf:"bytes,7,opt,name=collaborative,proto3,oneof"` //协同搬运组队指令
}

type CamelMessage_PeriodDataToAgvs_ struct {
	PeriodDataToAgvs *CamelMessage_PeriodDataToAgvs `protobuf:"bytes,8,opt,name=periodDataToAgvs,proto3,oneof"` // 持续发送的数据
}

type CamelMessage_PeriodDataFromAgvs_ struct {
	PeriodDataFromAgvs *CamelMessage_PeriodDataFromAgvs `protobuf:"bytes,9,opt,name=periodDataFromAgvs,proto3,oneof"` // 持续发送的数据
}

func (*CamelMessage_AllowFromAgvs_) isCamelMessage_Onlyone() {}

func (*CamelMessage_ReportToAgvs_) isCamelMessage_Onlyone() {}

func (*CamelMessage_MissonFromAgvs_) isCamelMessage_Onlyone() {}

func (*CamelMessage_RequestToAgvs_) isCamelMessage_Onlyone() {}

func (*CamelMessage_AvoidAreaFromAgvs_) isCamelMessage_Onlyone() {}

func (*CamelMessage_RequestFromAgvs_) isCamelMessage_Onlyone() {}

func (*CamelMessage_Collaborative) isCamelMessage_Onlyone() {}

func (*CamelMessage_PeriodDataToAgvs_) isCamelMessage_Onlyone() {}

func (*CamelMessage_PeriodDataFromAgvs_) isCamelMessage_Onlyone() {}

//AGVS发给camel的通信点、指令、警告信息
type CamelMessage_AllowFromAgvs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentStation string         `protobuf:"bytes,1,opt,name=currentStation,proto3" json:"currentStation,omitempty"`               //当前站点
	TargetStation  string         `protobuf:"bytes,2,opt,name=targetStation,proto3" json:"targetStation,omitempty"`                 //通行点
	ErrorMessage   []byte         `protobuf:"bytes,3,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`                   //警告信息 						//废弃 Alarm
	Charging       *ChargeCmd     `protobuf:"bytes,4,opt,name=charging,proto3" json:"charging,omitempty"`                           //充电指令[停止充电、允许充电]  //废弃 更换新的命令
	Emergency      bool           `protobuf:"varint,5,opt,name=emergency,proto3" json:"emergency,omitempty"`                        //急停刹车 						//废弃 更换新的命令
	IsUseable      bool           `protobuf:"varint,6,opt,name=isUseable,proto3" json:"isUseable,omitempty"`                        //是否可用状态
	HasTask        bool           `protobuf:"varint,7,opt,name=hasTask,proto3" json:"hasTask,omitempty"`                            //是否有任务
	Alarms         []*Alarm       `protobuf:"bytes,8,rep,name=alarms,proto3" json:"alarms,omitempty"`                               //系统报警信息
	SystemPause    DoAction       `protobuf:"varint,9,opt,name=systemPause,proto3,enum=DoAction" json:"systemPause,omitempty"`      //系统暂停所有车[0不暂停,1暂停]
	TaskStatus     AgvsTaskStatus `protobuf:"varint,10,opt,name=taskStatus,proto3,enum=AgvsTaskStatus" json:"taskStatus,omitempty"` //系统任务状态
}

func (x *CamelMessage_AllowFromAgvs) Reset() {
	*x = CamelMessage_AllowFromAgvs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_agvs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CamelMessage_AllowFromAgvs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CamelMessage_AllowFromAgvs) ProtoMessage() {}

func (x *CamelMessage_AllowFromAgvs) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_agvs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CamelMessage_AllowFromAgvs.ProtoReflect.Descriptor instead.
func (*CamelMessage_AllowFromAgvs) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_agvs_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CamelMessage_AllowFromAgvs) GetCurrentStation() string {
	if x != nil {
		return x.CurrentStation
	}
	return ""
}

func (x *CamelMessage_AllowFromAgvs) GetTargetStation() string {
	if x != nil {
		return x.TargetStation
	}
	return ""
}

func (x *CamelMessage_AllowFromAgvs) GetErrorMessage() []byte {
	if x != nil {
		return x.ErrorMessage
	}
	return nil
}

func (x *CamelMessage_AllowFromAgvs) GetCharging() *ChargeCmd {
	if x != nil {
		return x.Charging
	}
	return nil
}

func (x *CamelMessage_AllowFromAgvs) GetEmergency() bool {
	if x != nil {
		return x.Emergency
	}
	return false
}

func (x *CamelMessage_AllowFromAgvs) GetIsUseable() bool {
	if x != nil {
		return x.IsUseable
	}
	return false
}

func (x *CamelMessage_AllowFromAgvs) GetHasTask() bool {
	if x != nil {
		return x.HasTask
	}
	return false
}

func (x *CamelMessage_AllowFromAgvs) GetAlarms() []*Alarm {
	if x != nil {
		return x.Alarms
	}
	return nil
}

func (x *CamelMessage_AllowFromAgvs) GetSystemPause() DoAction {
	if x != nil {
		return x.SystemPause
	}
	return DoAction_kNoAction
}

func (x *CamelMessage_AllowFromAgvs) GetTaskStatus() AgvsTaskStatus {
	if x != nil {
		return x.TaskStatus
	}
	return AgvsTaskStatus_kNone
}

//camel给AGVS上报的状态信息
type CamelMessage_ReportToAgvs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarName        string     `protobuf:"bytes,1,opt,name=carName,proto3" json:"carName,omitempty"`               //小车标识符
	CurrentStation string     `protobuf:"bytes,2,opt,name=currentStation,proto3" json:"currentStation,omitempty"` //当前站点
	Position       *Position  `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`             //位姿
	Battery        *Battery   `protobuf:"bytes,4,opt,name=battery,proto3" json:"battery,omitempty"`               //充电状态
	CarInfo        *CarHWInfo `protobuf:"bytes,5,opt,name=carInfo,proto3" json:"carInfo,omitempty"`               //小车硬件状态                  //废弃
	ErrorMessage   []byte     `protobuf:"bytes,6,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`     //报警信息                      //废弃
	Alarms         []*Alarm   `protobuf:"bytes,7,rep,name=alarms,proto3" json:"alarms,omitempty"`                 //报警信息新      				//使用报警信息
	IsPulling      bool       `protobuf:"varint,8,opt,name=isPulling,proto3" json:"isPulling,omitempty"`          //人工拉车状态
	IP             string     `protobuf:"bytes,9,opt,name=IP,proto3" json:"IP,omitempty"`                         //小车的ip地址，agvs通过socket获知的
	Collaborative  bool       `protobuf:"varint,10,opt,name=collaborative,proto3" json:"collaborative,omitempty"` //协同搬运状态
}

func (x *CamelMessage_ReportToAgvs) Reset() {
	*x = CamelMessage_ReportToAgvs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_agvs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CamelMessage_ReportToAgvs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CamelMessage_ReportToAgvs) ProtoMessage() {}

func (x *CamelMessage_ReportToAgvs) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_agvs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CamelMessage_ReportToAgvs.ProtoReflect.Descriptor instead.
func (*CamelMessage_ReportToAgvs) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_agvs_proto_rawDescGZIP(), []int{0, 1}
}

func (x *CamelMessage_ReportToAgvs) GetCarName() string {
	if x != nil {
		return x.CarName
	}
	return ""
}

func (x *CamelMessage_ReportToAgvs) GetCurrentStation() string {
	if x != nil {
		return x.CurrentStation
	}
	return ""
}

func (x *CamelMessage_ReportToAgvs) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *CamelMessage_ReportToAgvs) GetBattery() *Battery {
	if x != nil {
		return x.Battery
	}
	return nil
}

func (x *CamelMessage_ReportToAgvs) GetCarInfo() *CarHWInfo {
	if x != nil {
		return x.CarInfo
	}
	return nil
}

func (x *CamelMessage_ReportToAgvs) GetErrorMessage() []byte {
	if x != nil {
		return x.ErrorMessage
	}
	return nil
}

func (x *CamelMessage_ReportToAgvs) GetAlarms() []*Alarm {
	if x != nil {
		return x.Alarms
	}
	return nil
}

func (x *CamelMessage_ReportToAgvs) GetIsPulling() bool {
	if x != nil {
		return x.IsPulling
	}
	return false
}

func (x *CamelMessage_ReportToAgvs) GetIP() string {
	if x != nil {
		return x.IP
	}
	return ""
}

func (x *CamelMessage_ReportToAgvs) GetCollaborative() bool {
	if x != nil {
		return x.Collaborative
	}
	return false
}

//AGVS发送给camel的路线和任务信息
type CamelMessage_MissonFromAgvs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Route         string       `protobuf:"bytes,1,opt,name=route,proto3" json:"route,omitempty"`                 //路线
	ContextTask   *ContextTask `protobuf:"bytes,2,opt,name=contextTask,proto3" json:"contextTask,omitempty"`     //任务信息
	TargetStation string       `protobuf:"bytes,3,opt,name=targetStation,proto3" json:"targetStation,omitempty"` //同行点信息
}

func (x *CamelMessage_MissonFromAgvs) Reset() {
	*x = CamelMessage_MissonFromAgvs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_agvs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CamelMessage_MissonFromAgvs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CamelMessage_MissonFromAgvs) ProtoMessage() {}

func (x *CamelMessage_MissonFromAgvs) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_agvs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CamelMessage_MissonFromAgvs.ProtoReflect.Descriptor instead.
func (*CamelMessage_MissonFromAgvs) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_agvs_proto_rawDescGZIP(), []int{0, 2}
}

func (x *CamelMessage_MissonFromAgvs) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *CamelMessage_MissonFromAgvs) GetContextTask() *ContextTask {
	if x != nil {
		return x.ContextTask
	}
	return nil
}

func (x *CamelMessage_MissonFromAgvs) GetTargetStation() string {
	if x != nil {
		return x.TargetStation
	}
	return ""
}

//AGVS发送给camel的避障区域信息
type CamelMessage_AvoidAreaFromAgvs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvoidArea *AvoidanceAreaCollection `protobuf:"bytes,1,opt,name=avoidArea,proto3" json:"avoidArea,omitempty"` //避障区域
}

func (x *CamelMessage_AvoidAreaFromAgvs) Reset() {
	*x = CamelMessage_AvoidAreaFromAgvs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_agvs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CamelMessage_AvoidAreaFromAgvs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CamelMessage_AvoidAreaFromAgvs) ProtoMessage() {}

func (x *CamelMessage_AvoidAreaFromAgvs) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_agvs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CamelMessage_AvoidAreaFromAgvs.ProtoReflect.Descriptor instead.
func (*CamelMessage_AvoidAreaFromAgvs) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_agvs_proto_rawDescGZIP(), []int{0, 3}
}

func (x *CamelMessage_AvoidAreaFromAgvs) GetAvoidArea() *AvoidanceAreaCollection {
	if x != nil {
		return x.AvoidArea
	}
	return nil
}

//camel发送给AGVS的请求
type CamelMessage_RequestToAgvs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetMissonInfo   DoAction `protobuf:"varint,1,opt,name=getMissonInfo,proto3,enum=DoAction" json:"getMissonInfo,omitempty"`      //查询任务信息          0无操作	 1申请任务信息
	SetUseable      DoAction `protobuf:"varint,2,opt,name=setUseable,proto3,enum=DoAction" json:"setUseable,omitempty"`            //请求设置可调度        0无操作  1设置可用 2设置不可用
	CancelTask      DoAction `protobuf:"varint,3,opt,name=cancelTask,proto3,enum=DoAction" json:"cancelTask,omitempty"`            //申请取消任务			0无操作  1取消不重新发布 2取消并重新发布
	RequestCharging DoAction `protobuf:"varint,4,opt,name=requestCharging,proto3,enum=DoAction" json:"requestCharging,omitempty"`  //请求充电      		0无操作  1请求充电 2结束充电
	Unlock          DoAction `protobuf:"varint,5,opt,name=unlock,proto3,enum=DoAction" json:"unlock,omitempty"`                    //请求解除管制		    0无操作  1请求解除本小车管制
	LiftEmergency   DoAction `protobuf:"varint,6,opt,name=liftEmergency,proto3,enum=DoAction" json:"liftEmergency,omitempty"`      //请求解除刹车			0无操作  1请求接触本小车刹车
	ApplyRotue      string   `protobuf:"bytes,7,opt,name=applyRotue,proto3" json:"applyRotue,omitempty"`                           //申请路径 from + to.   ""无操作 "0000112345" 请求00001到123456的路径	废弃
	ManualStation   string   `protobuf:"bytes,8,opt,name=manualStation,proto3" json:"manualStation,omitempty"`                     //手动发送站点  		""无操作 "00001" 发送00001站点					废弃
	AvoidAreaOper   DoAction `protobuf:"varint,9,opt,name=avoidAreaOper,proto3,enum=DoAction" json:"avoidAreaOper,omitempty"`      //申请或释放避障区域    0无操作  1申请避障区域 2释放避障区域
	InitialTraffic  DoAction `protobuf:"varint,10,opt,name=initialTraffic,proto3,enum=DoAction" json:"initialTraffic,omitempty"`   //一键拉车状态		 	0误操作  1进入一键拉车态 2离开一键拉车态
	TrafficRecovery DoAction `protobuf:"varint,11,opt,name=trafficRecovery,proto3,enum=DoAction" json:"trafficRecovery,omitempty"` //管制点回收			0误操作  1申请回收
	ComplishTask    DoAction `protobuf:"varint,12,opt,name=complishTask,proto3,enum=DoAction" json:"complishTask,omitempty"`       //完成任务 				0无操作	 1完成
	NextTaskFlow    DoAction `protobuf:"varint,13,opt,name=nextTaskFlow,proto3,enum=DoAction" json:"nextTaskFlow,omitempty"`       //下一任务流程			0无操作	 1完成
	StrParam        string   `protobuf:"bytes,20,opt,name=strParam,proto3" json:"strParam,omitempty"`                              //请求命令参数
	IP              string   `protobuf:"bytes,21,opt,name=IP,proto3" json:"IP,omitempty"`                                          //小车的ip地址，agvs通过socket获知的
}

func (x *CamelMessage_RequestToAgvs) Reset() {
	*x = CamelMessage_RequestToAgvs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_agvs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CamelMessage_RequestToAgvs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CamelMessage_RequestToAgvs) ProtoMessage() {}

func (x *CamelMessage_RequestToAgvs) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_agvs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CamelMessage_RequestToAgvs.ProtoReflect.Descriptor instead.
func (*CamelMessage_RequestToAgvs) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_agvs_proto_rawDescGZIP(), []int{0, 4}
}

func (x *CamelMessage_RequestToAgvs) GetGetMissonInfo() DoAction {
	if x != nil {
		return x.GetMissonInfo
	}
	return DoAction_kNoAction
}

func (x *CamelMessage_RequestToAgvs) GetSetUseable() DoAction {
	if x != nil {
		return x.SetUseable
	}
	return DoAction_kNoAction
}

func (x *CamelMessage_RequestToAgvs) GetCancelTask() DoAction {
	if x != nil {
		return x.CancelTask
	}
	return DoAction_kNoAction
}

func (x *CamelMessage_RequestToAgvs) GetRequestCharging() DoAction {
	if x != nil {
		return x.RequestCharging
	}
	return DoAction_kNoAction
}

func (x *CamelMessage_RequestToAgvs) GetUnlock() DoAction {
	if x != nil {
		return x.Unlock
	}
	return DoAction_kNoAction
}

func (x *CamelMessage_RequestToAgvs) GetLiftEmergency() DoAction {
	if x != nil {
		return x.LiftEmergency
	}
	return DoAction_kNoAction
}

func (x *CamelMessage_RequestToAgvs) GetApplyRotue() string {
	if x != nil {
		return x.ApplyRotue
	}
	return ""
}

func (x *CamelMessage_RequestToAgvs) GetManualStation() string {
	if x != nil {
		return x.ManualStation
	}
	return ""
}

func (x *CamelMessage_RequestToAgvs) GetAvoidAreaOper() DoAction {
	if x != nil {
		return x.AvoidAreaOper
	}
	return DoAction_kNoAction
}

func (x *CamelMessage_RequestToAgvs) GetInitialTraffic() DoAction {
	if x != nil {
		return x.InitialTraffic
	}
	return DoAction_kNoAction
}

func (x *CamelMessage_RequestToAgvs) GetTrafficRecovery() DoAction {
	if x != nil {
		return x.TrafficRecovery
	}
	return DoAction_kNoAction
}

func (x *CamelMessage_RequestToAgvs) GetComplishTask() DoAction {
	if x != nil {
		return x.ComplishTask
	}
	return DoAction_kNoAction
}

func (x *CamelMessage_RequestToAgvs) GetNextTaskFlow() DoAction {
	if x != nil {
		return x.NextTaskFlow
	}
	return DoAction_kNoAction
}

func (x *CamelMessage_RequestToAgvs) GetStrParam() string {
	if x != nil {
		return x.StrParam
	}
	return ""
}

func (x *CamelMessage_RequestToAgvs) GetIP() string {
	if x != nil {
		return x.IP
	}
	return ""
}

//AGVS发送的一些命令
type CamelMessage_RequestFromAgvs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Charging  *ChargeCmd `protobuf:"bytes,1,opt,name=charging,proto3" json:"charging,omitempty"`                  //充电命令
	Emergency DoAction   `protobuf:"varint,2,opt,name=emergency,proto3,enum=DoAction" json:"emergency,omitempty"` //0无动作 1系统刹车 2解除系统刹车
}

func (x *CamelMessage_RequestFromAgvs) Reset() {
	*x = CamelMessage_RequestFromAgvs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_agvs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CamelMessage_RequestFromAgvs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CamelMessage_RequestFromAgvs) ProtoMessage() {}

func (x *CamelMessage_RequestFromAgvs) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_agvs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CamelMessage_RequestFromAgvs.ProtoReflect.Descriptor instead.
func (*CamelMessage_RequestFromAgvs) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_agvs_proto_rawDescGZIP(), []int{0, 5}
}

func (x *CamelMessage_RequestFromAgvs) GetCharging() *ChargeCmd {
	if x != nil {
		return x.Charging
	}
	return nil
}

func (x *CamelMessage_RequestFromAgvs) GetEmergency() DoAction {
	if x != nil {
		return x.Emergency
	}
	return DoAction_kNoAction
}

//车辆运行信息
type CamelMessage_PeriodDataToAgvs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CamelVersion      string  `protobuf:"bytes,1,opt,name=camelVersion,proto3" json:"camelVersion,omitempty"`
	MapVersion        string  `protobuf:"bytes,2,opt,name=mapVersion,proto3" json:"mapVersion,omitempty"`
	TotalOdometry     float32 `protobuf:"fixed32,3,opt,name=totalOdometry,proto3" json:"totalOdometry,omitempty"`         // 总里程数
	TotalRuntime      float32 `protobuf:"fixed32,4,opt,name=totalRuntime,proto3" json:"totalRuntime,omitempty"`           // 总运行时间
	TotalTaskOdometry float32 `protobuf:"fixed32,5,opt,name=totalTaskOdometry,proto3" json:"totalTaskOdometry,omitempty"` // 总任务运行里程
	TotalTaskRuntime  float32 `protobuf:"fixed32,6,opt,name=totalTaskRuntime,proto3" json:"totalTaskRuntime,omitempty"`   // 总任务运行时间
}

func (x *CamelMessage_PeriodDataToAgvs) Reset() {
	*x = CamelMessage_PeriodDataToAgvs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_agvs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CamelMessage_PeriodDataToAgvs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CamelMessage_PeriodDataToAgvs) ProtoMessage() {}

func (x *CamelMessage_PeriodDataToAgvs) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_agvs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CamelMessage_PeriodDataToAgvs.ProtoReflect.Descriptor instead.
func (*CamelMessage_PeriodDataToAgvs) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_agvs_proto_rawDescGZIP(), []int{0, 6}
}

func (x *CamelMessage_PeriodDataToAgvs) GetCamelVersion() string {
	if x != nil {
		return x.CamelVersion
	}
	return ""
}

func (x *CamelMessage_PeriodDataToAgvs) GetMapVersion() string {
	if x != nil {
		return x.MapVersion
	}
	return ""
}

func (x *CamelMessage_PeriodDataToAgvs) GetTotalOdometry() float32 {
	if x != nil {
		return x.TotalOdometry
	}
	return 0
}

func (x *CamelMessage_PeriodDataToAgvs) GetTotalRuntime() float32 {
	if x != nil {
		return x.TotalRuntime
	}
	return 0
}

func (x *CamelMessage_PeriodDataToAgvs) GetTotalTaskOdometry() float32 {
	if x != nil {
		return x.TotalTaskOdometry
	}
	return 0
}

func (x *CamelMessage_PeriodDataToAgvs) GetTotalTaskRuntime() float32 {
	if x != nil {
		return x.TotalTaskRuntime
	}
	return 0
}

type CamelMessage_PeriodDataFromAgvs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"` // 接头成功
}

func (x *CamelMessage_PeriodDataFromAgvs) Reset() {
	*x = CamelMessage_PeriodDataFromAgvs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_agvs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CamelMessage_PeriodDataFromAgvs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CamelMessage_PeriodDataFromAgvs) ProtoMessage() {}

func (x *CamelMessage_PeriodDataFromAgvs) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_agvs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CamelMessage_PeriodDataFromAgvs.ProtoReflect.Descriptor instead.
func (*CamelMessage_PeriodDataFromAgvs) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_agvs_proto_rawDescGZIP(), []int{0, 7}
}

func (x *CamelMessage_PeriodDataFromAgvs) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

var File_protobuf_camel_agvs_proto protoreflect.FileDescriptor

var file_protobuf_camel_agvs_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x61, 0x6d, 0x65, 0x6c,
	0x2d, 0x61, 0x67, 0x76, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x61, 0x6d, 0x65, 0x6c, 0x2d, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x14, 0x0a, 0x0c, 0x43, 0x61, 0x6d,
	0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x67, 0x76, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x67, 0x76, 0x73, 0x48, 0x00, 0x52,
	0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x67, 0x76, 0x73, 0x12, 0x40,
	0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x41, 0x67, 0x76, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x41, 0x67, 0x76, 0x73,
	0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x41, 0x67, 0x76, 0x73,
	0x12, 0x46, 0x0a, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x67,
	0x76, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x6c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x6f, 0x6e, 0x46, 0x72,
	0x6f, 0x6d, 0x41, 0x67, 0x76, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x6f, 0x6e,
	0x46, 0x72, 0x6f, 0x6d, 0x41, 0x67, 0x76, 0x73, 0x12, 0x43, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x54, 0x6f, 0x41, 0x67, 0x76, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x41, 0x67, 0x76, 0x73, 0x48, 0x00, 0x52, 0x0d,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x41, 0x67, 0x76, 0x73, 0x12, 0x4f, 0x0a,
	0x11, 0x61, 0x76, 0x6f, 0x69, 0x64, 0x41, 0x72, 0x65, 0x61, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x67,
	0x76, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x6c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x76, 0x6f, 0x69, 0x64, 0x41, 0x72, 0x65,
	0x61, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x67, 0x76, 0x73, 0x48, 0x00, 0x52, 0x11, 0x61, 0x76, 0x6f,
	0x69, 0x64, 0x41, 0x72, 0x65, 0x61, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x67, 0x76, 0x73, 0x12, 0x49,
	0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x67, 0x76,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x72,
	0x6f, 0x6d, 0x41, 0x67, 0x76, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x67, 0x76, 0x73, 0x12, 0x36, 0x0a, 0x0d, 0x63, 0x6f, 0x6c,
	0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x48, 0x00, 0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x4c, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x61, 0x54,
	0x6f, 0x41, 0x67, 0x76, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x43, 0x61,
	0x6d, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x54, 0x6f, 0x41, 0x67, 0x76, 0x73, 0x48, 0x00, 0x52, 0x10, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x61, 0x54, 0x6f, 0x41, 0x67, 0x76, 0x73, 0x12,
	0x52, 0x0a, 0x12, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x61, 0x46, 0x72, 0x6f,
	0x6d, 0x41, 0x67, 0x76, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x43, 0x61,
	0x6d, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x67, 0x76, 0x73, 0x48, 0x00, 0x52,
	0x12, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x61, 0x46, 0x72, 0x6f, 0x6d, 0x41,
	0x67, 0x76, 0x73, 0x1a, 0xfd, 0x02, 0x0a, 0x0d, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x46, 0x72, 0x6f,
	0x6d, 0x41, 0x67, 0x76, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a,
	0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x43, 0x6d, 0x64, 0x52, 0x08, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x73, 0x55, 0x73, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x55, 0x73, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68,
	0x61, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61,
	0x73, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1e, 0x0a, 0x06, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x06, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x73, 0x12, 0x2b, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x50,
	0x61, 0x75, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x44, 0x6f, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x75,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x41, 0x67, 0x76, 0x73, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x1a, 0xd9, 0x02, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f,
	0x41, 0x67, 0x76, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a,
	0x07, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x07, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x12, 0x24, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x61, 0x72, 0x48, 0x57, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x63, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x06, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x52, 0x06, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x73, 0x50, 0x75, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x50, 0x75, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x50, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x50, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6c,
	0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x1a,
	0x7c, 0x0a, 0x0e, 0x4d, 0x69, 0x73, 0x73, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x67, 0x76,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x4b, 0x0a,
	0x11, 0x41, 0x76, 0x6f, 0x69, 0x64, 0x41, 0x72, 0x65, 0x61, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x67,
	0x76, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x76, 0x6f, 0x69, 0x64, 0x41, 0x72, 0x65, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x41, 0x76, 0x6f, 0x69, 0x64, 0x61, 0x6e, 0x63,
	0x65, 0x41, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x61, 0x76, 0x6f, 0x69, 0x64, 0x41, 0x72, 0x65, 0x61, 0x1a, 0x88, 0x05, 0x0a, 0x0d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x41, 0x67, 0x76, 0x73, 0x12, 0x2f, 0x0a, 0x0d,
	0x67, 0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x44, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d,
	0x67, 0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a,
	0x0a, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x09, 0x2e, 0x44, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x44,
	0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x33, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x44,
	0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x06, 0x75, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x44, 0x6f, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x06, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2f, 0x0a, 0x0d, 0x6c,
	0x69, 0x66, 0x74, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x09, 0x2e, 0x44, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6c,
	0x69, 0x66, 0x74, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x6f, 0x74, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x6f, 0x74, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x0d, 0x61, 0x76, 0x6f, 0x69, 0x64, 0x41, 0x72, 0x65, 0x61, 0x4f,
	0x70, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x44, 0x6f, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x76, 0x6f, 0x69, 0x64, 0x41, 0x72, 0x65, 0x61, 0x4f,
	0x70, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x44, 0x6f,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x12, 0x33, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x09, 0x2e, 0x44, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x2d, 0x0a, 0x0c, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x09, 0x2e, 0x44, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x2d, 0x0a, 0x0c, 0x6e, 0x65,
	0x78, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x09, 0x2e, 0x44, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6e, 0x65, 0x78,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x50, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x50, 0x1a, 0x62, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x46, 0x72, 0x6f, 0x6d, 0x41, 0x67, 0x76, 0x73, 0x12, 0x26, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x43, 0x6d, 0x64, 0x52, 0x08, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67,
	0x12, 0x27, 0x0a, 0x09, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x44, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x1a, 0xfa, 0x01, 0x0a, 0x10, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x61, 0x54, 0x6f, 0x41, 0x67, 0x76, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x61, 0x6d, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6d, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x64, 0x6f, 0x6d, 0x65,
	0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x4f, 0x64, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x64, 0x6f, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61,
	0x73, 0x6b, 0x4f, 0x64, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x24, 0x0a, 0x12, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x67, 0x76, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x42, 0x09, 0x0a, 0x07,
	0x6f, 0x6e, 0x6c, 0x79, 0x6f, 0x6e, 0x65, 0x42, 0x2a, 0x5a, 0x07, 0x2e, 0x2f, 0x63, 0x61, 0x6d,
	0x65, 0x6c, 0xaa, 0x02, 0x1e, 0x41, 0x47, 0x56, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_camel_agvs_proto_rawDescOnce sync.Once
	file_protobuf_camel_agvs_proto_rawDescData = file_protobuf_camel_agvs_proto_rawDesc
)

func file_protobuf_camel_agvs_proto_rawDescGZIP() []byte {
	file_protobuf_camel_agvs_proto_rawDescOnce.Do(func() {
		file_protobuf_camel_agvs_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_camel_agvs_proto_rawDescData)
	})
	return file_protobuf_camel_agvs_proto_rawDescData
}

var file_protobuf_camel_agvs_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_protobuf_camel_agvs_proto_goTypes = []interface{}{
	(*CamelMessage)(nil),                    // 0: CamelMessage
	(*CamelMessage_AllowFromAgvs)(nil),      // 1: CamelMessage.AllowFromAgvs
	(*CamelMessage_ReportToAgvs)(nil),       // 2: CamelMessage.ReportToAgvs
	(*CamelMessage_MissonFromAgvs)(nil),     // 3: CamelMessage.MissonFromAgvs
	(*CamelMessage_AvoidAreaFromAgvs)(nil),  // 4: CamelMessage.AvoidAreaFromAgvs
	(*CamelMessage_RequestToAgvs)(nil),      // 5: CamelMessage.RequestToAgvs
	(*CamelMessage_RequestFromAgvs)(nil),    // 6: CamelMessage.RequestFromAgvs
	(*CamelMessage_PeriodDataToAgvs)(nil),   // 7: CamelMessage.PeriodDataToAgvs
	(*CamelMessage_PeriodDataFromAgvs)(nil), // 8: CamelMessage.PeriodDataFromAgvs
	(*Collaborative)(nil),                   // 9: Collaborative
	(*ChargeCmd)(nil),                       // 10: ChargeCmd
	(*Alarm)(nil),                           // 11: Alarm
	(DoAction)(0),                           // 12: DoAction
	(AgvsTaskStatus)(0),                     // 13: AgvsTaskStatus
	(*Position)(nil),                        // 14: Position
	(*Battery)(nil),                         // 15: Battery
	(*CarHWInfo)(nil),                       // 16: CarHWInfo
	(*ContextTask)(nil),                     // 17: ContextTask
	(*AvoidanceAreaCollection)(nil),         // 18: AvoidanceAreaCollection
}
var file_protobuf_camel_agvs_proto_depIdxs = []int32{
	1,  // 0: CamelMessage.allowFromAgvs:type_name -> CamelMessage.AllowFromAgvs
	2,  // 1: CamelMessage.reportToAgvs:type_name -> CamelMessage.ReportToAgvs
	3,  // 2: CamelMessage.missonFromAgvs:type_name -> CamelMessage.MissonFromAgvs
	5,  // 3: CamelMessage.requestToAgvs:type_name -> CamelMessage.RequestToAgvs
	4,  // 4: CamelMessage.avoidAreaFromAgvs:type_name -> CamelMessage.AvoidAreaFromAgvs
	6,  // 5: CamelMessage.requestFromAgvs:type_name -> CamelMessage.RequestFromAgvs
	9,  // 6: CamelMessage.collaborative:type_name -> Collaborative
	7,  // 7: CamelMessage.periodDataToAgvs:type_name -> CamelMessage.PeriodDataToAgvs
	8,  // 8: CamelMessage.periodDataFromAgvs:type_name -> CamelMessage.PeriodDataFromAgvs
	10, // 9: CamelMessage.AllowFromAgvs.charging:type_name -> ChargeCmd
	11, // 10: CamelMessage.AllowFromAgvs.alarms:type_name -> Alarm
	12, // 11: CamelMessage.AllowFromAgvs.systemPause:type_name -> DoAction
	13, // 12: CamelMessage.AllowFromAgvs.taskStatus:type_name -> AgvsTaskStatus
	14, // 13: CamelMessage.ReportToAgvs.position:type_name -> Position
	15, // 14: CamelMessage.ReportToAgvs.battery:type_name -> Battery
	16, // 15: CamelMessage.ReportToAgvs.carInfo:type_name -> CarHWInfo
	11, // 16: CamelMessage.ReportToAgvs.alarms:type_name -> Alarm
	17, // 17: CamelMessage.MissonFromAgvs.contextTask:type_name -> ContextTask
	18, // 18: CamelMessage.AvoidAreaFromAgvs.avoidArea:type_name -> AvoidanceAreaCollection
	12, // 19: CamelMessage.RequestToAgvs.getMissonInfo:type_name -> DoAction
	12, // 20: CamelMessage.RequestToAgvs.setUseable:type_name -> DoAction
	12, // 21: CamelMessage.RequestToAgvs.cancelTask:type_name -> DoAction
	12, // 22: CamelMessage.RequestToAgvs.requestCharging:type_name -> DoAction
	12, // 23: CamelMessage.RequestToAgvs.unlock:type_name -> DoAction
	12, // 24: CamelMessage.RequestToAgvs.liftEmergency:type_name -> DoAction
	12, // 25: CamelMessage.RequestToAgvs.avoidAreaOper:type_name -> DoAction
	12, // 26: CamelMessage.RequestToAgvs.initialTraffic:type_name -> DoAction
	12, // 27: CamelMessage.RequestToAgvs.trafficRecovery:type_name -> DoAction
	12, // 28: CamelMessage.RequestToAgvs.complishTask:type_name -> DoAction
	12, // 29: CamelMessage.RequestToAgvs.nextTaskFlow:type_name -> DoAction
	10, // 30: CamelMessage.RequestFromAgvs.charging:type_name -> ChargeCmd
	12, // 31: CamelMessage.RequestFromAgvs.emergency:type_name -> DoAction
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_protobuf_camel_agvs_proto_init() }
func file_protobuf_camel_agvs_proto_init() {
	if File_protobuf_camel_agvs_proto != nil {
		return
	}
	file_protobuf_camel_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protobuf_camel_agvs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CamelMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_agvs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CamelMessage_AllowFromAgvs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_agvs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CamelMessage_ReportToAgvs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_agvs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CamelMessage_MissonFromAgvs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_agvs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CamelMessage_AvoidAreaFromAgvs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_agvs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CamelMessage_RequestToAgvs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_agvs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CamelMessage_RequestFromAgvs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_agvs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CamelMessage_PeriodDataToAgvs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_agvs_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CamelMessage_PeriodDataFromAgvs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protobuf_camel_agvs_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*CamelMessage_AllowFromAgvs_)(nil),
		(*CamelMessage_ReportToAgvs_)(nil),
		(*CamelMessage_MissonFromAgvs_)(nil),
		(*CamelMessage_RequestToAgvs_)(nil),
		(*CamelMessage_AvoidAreaFromAgvs_)(nil),
		(*CamelMessage_RequestFromAgvs_)(nil),
		(*CamelMessage_Collaborative)(nil),
		(*CamelMessage_PeriodDataToAgvs_)(nil),
		(*CamelMessage_PeriodDataFromAgvs_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_camel_agvs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protobuf_camel_agvs_proto_goTypes,
		DependencyIndexes: file_protobuf_camel_agvs_proto_depIdxs,
		MessageInfos:      file_protobuf_camel_agvs_proto_msgTypes,
	}.Build()
	File_protobuf_camel_agvs_proto = out.File
	file_protobuf_camel_agvs_proto_rawDesc = nil
	file_protobuf_camel_agvs_proto_goTypes = nil
	file_protobuf_camel_agvs_proto_depIdxs = nil
}
