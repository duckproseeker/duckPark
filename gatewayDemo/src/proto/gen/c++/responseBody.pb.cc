// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: responseBody.proto

#include "responseBody.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace response_body {
constexpr ResponseBodyIn::ResponseBodyIn(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ResponseBodyInDefaultTypeInternal {
  constexpr ResponseBodyInDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResponseBodyInDefaultTypeInternal() {}
  union {
    ResponseBodyIn _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResponseBodyInDefaultTypeInternal _ResponseBodyIn_default_instance_;
constexpr ResponseBodyOut_Response::ResponseBodyOut_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ResponseBodyOut_ResponseDefaultTypeInternal {
  constexpr ResponseBodyOut_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResponseBodyOut_ResponseDefaultTypeInternal() {}
  union {
    ResponseBodyOut_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResponseBodyOut_ResponseDefaultTypeInternal _ResponseBodyOut_Response_default_instance_;
constexpr ResponseBodyOut::ResponseBodyOut(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : response_(nullptr){}
struct ResponseBodyOutDefaultTypeInternal {
  constexpr ResponseBodyOutDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResponseBodyOutDefaultTypeInternal() {}
  union {
    ResponseBodyOut _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResponseBodyOutDefaultTypeInternal _ResponseBodyOut_default_instance_;
constexpr RepeatedResponseBodyOut_Response::RepeatedResponseBodyOut_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_(0)
{}
struct RepeatedResponseBodyOut_ResponseDefaultTypeInternal {
  constexpr RepeatedResponseBodyOut_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RepeatedResponseBodyOut_ResponseDefaultTypeInternal() {}
  union {
    RepeatedResponseBodyOut_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RepeatedResponseBodyOut_ResponseDefaultTypeInternal _RepeatedResponseBodyOut_Response_default_instance_;
constexpr RepeatedResponseBodyOut::RepeatedResponseBodyOut(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : response_(){}
struct RepeatedResponseBodyOutDefaultTypeInternal {
  constexpr RepeatedResponseBodyOutDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RepeatedResponseBodyOutDefaultTypeInternal() {}
  union {
    RepeatedResponseBodyOut _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RepeatedResponseBodyOutDefaultTypeInternal _RepeatedResponseBodyOut_default_instance_;
constexpr RepeatedResponseStrings::RepeatedResponseStrings(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : values_(){}
struct RepeatedResponseStringsDefaultTypeInternal {
  constexpr RepeatedResponseStringsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RepeatedResponseStringsDefaultTypeInternal() {}
  union {
    RepeatedResponseStrings _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RepeatedResponseStringsDefaultTypeInternal _RepeatedResponseStrings_default_instance_;
}  // namespace response_body
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_responseBody_2eproto[6];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_responseBody_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_responseBody_2eproto = nullptr;

const uint32_t TableStruct_responseBody_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::response_body::ResponseBodyIn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::response_body::ResponseBodyIn, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::response_body::ResponseBodyOut_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::response_body::ResponseBodyOut_Response, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::response_body::ResponseBodyOut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::response_body::ResponseBodyOut, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::response_body::RepeatedResponseBodyOut_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::response_body::RepeatedResponseBodyOut_Response, data_),
  PROTOBUF_FIELD_OFFSET(::response_body::RepeatedResponseBodyOut_Response, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::response_body::RepeatedResponseBodyOut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::response_body::RepeatedResponseBodyOut, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::response_body::RepeatedResponseStrings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::response_body::RepeatedResponseStrings, values_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::response_body::ResponseBodyIn)},
  { 7, -1, -1, sizeof(::response_body::ResponseBodyOut_Response)},
  { 14, -1, -1, sizeof(::response_body::ResponseBodyOut)},
  { 21, -1, -1, sizeof(::response_body::RepeatedResponseBodyOut_Response)},
  { 29, -1, -1, sizeof(::response_body::RepeatedResponseBodyOut)},
  { 36, -1, -1, sizeof(::response_body::RepeatedResponseStrings)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::response_body::_ResponseBodyIn_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::response_body::_ResponseBodyOut_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::response_body::_ResponseBodyOut_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::response_body::_RepeatedResponseBodyOut_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::response_body::_RepeatedResponseBodyOut_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::response_body::_RepeatedResponseStrings_default_instance_),
};

const char descriptor_table_protodef_responseBody_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022responseBody.proto\022\rresponse_body\"\036\n\016R"
  "esponseBodyIn\022\014\n\004data\030\001 \001(\t\"f\n\017ResponseB"
  "odyOut\0229\n\010response\030\002 \001(\0132\'.response_body"
  ".ResponseBodyOut.Response\032\030\n\010Response\022\014\n"
  "\004data\030\001 \001(\t\"\356\001\n\027RepeatedResponseBodyOut\022"
  "A\n\010response\030\002 \003(\0132/.response_body.Repeat"
  "edResponseBodyOut.Response\032\217\001\n\010Response\022"
  "\014\n\004data\030\001 \001(\t\022J\n\004type\030\003 \001(\0162<.response_b"
  "ody.RepeatedResponseBodyOut.Response.Res"
  "ponseType\")\n\014ResponseType\022\013\n\007UNKNOWN\020\000\022\005"
  "\n\001A\020\001\022\005\n\001B\020\002\")\n\027RepeatedResponseStrings\022"
  "\016\n\006values\030\001 \003(\t2\204\003\n\023ResponseBodyService\022"
  "R\n\017GetResponseBody\022\035.response_body.Respo"
  "nseBodyIn\032\036.response_body.ResponseBodyOu"
  "t\"\000\022]\n\022ListResponseBodies\022\035.response_bod"
  "y.ResponseBodyIn\032&.response_body.Repeate"
  "dResponseBodyOut\"\000\022^\n\023ListResponseString"
  "s\022\035.response_body.ResponseBodyIn\032&.respo"
  "nse_body.RepeatedResponseStrings\"\000\022Z\n\025Ge"
  "tResponseBodyStream\022\035.response_body.Resp"
  "onseBodyIn\032\036.response_body.ResponseBodyO"
  "ut\"\0000\001BMZKgithub.com/grpc-ecosystem/grpc"
  "-gateway/v2/examples/internal/proto/exam"
  "plepbb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_responseBody_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_responseBody_2eproto = {
  false, false, 933, descriptor_table_protodef_responseBody_2eproto, "responseBody.proto", 
  &descriptor_table_responseBody_2eproto_once, nullptr, 0, 6,
  schemas, file_default_instances, TableStruct_responseBody_2eproto::offsets,
  file_level_metadata_responseBody_2eproto, file_level_enum_descriptors_responseBody_2eproto, file_level_service_descriptors_responseBody_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_responseBody_2eproto_getter() {
  return &descriptor_table_responseBody_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_responseBody_2eproto(&descriptor_table_responseBody_2eproto);
namespace response_body {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RepeatedResponseBodyOut_Response_ResponseType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_responseBody_2eproto);
  return file_level_enum_descriptors_responseBody_2eproto[0];
}
bool RepeatedResponseBodyOut_Response_ResponseType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr RepeatedResponseBodyOut_Response_ResponseType RepeatedResponseBodyOut_Response::UNKNOWN;
constexpr RepeatedResponseBodyOut_Response_ResponseType RepeatedResponseBodyOut_Response::A;
constexpr RepeatedResponseBodyOut_Response_ResponseType RepeatedResponseBodyOut_Response::B;
constexpr RepeatedResponseBodyOut_Response_ResponseType RepeatedResponseBodyOut_Response::ResponseType_MIN;
constexpr RepeatedResponseBodyOut_Response_ResponseType RepeatedResponseBodyOut_Response::ResponseType_MAX;
constexpr int RepeatedResponseBodyOut_Response::ResponseType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class ResponseBodyIn::_Internal {
 public:
};

ResponseBodyIn::ResponseBodyIn(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:response_body.ResponseBodyIn)
}
ResponseBodyIn::ResponseBodyIn(const ResponseBodyIn& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:response_body.ResponseBodyIn)
}

inline void ResponseBodyIn::SharedCtor() {
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ResponseBodyIn::~ResponseBodyIn() {
  // @@protoc_insertion_point(destructor:response_body.ResponseBodyIn)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResponseBodyIn::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResponseBodyIn::ArenaDtor(void* object) {
  ResponseBodyIn* _this = reinterpret_cast< ResponseBodyIn* >(object);
  (void)_this;
}
void ResponseBodyIn::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResponseBodyIn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResponseBodyIn::Clear() {
// @@protoc_insertion_point(message_clear_start:response_body.ResponseBodyIn)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseBodyIn::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "response_body.ResponseBodyIn.data"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResponseBodyIn::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:response_body.ResponseBodyIn)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (!this->_internal_data().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data().data(), static_cast<int>(this->_internal_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "response_body.ResponseBodyIn.data");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:response_body.ResponseBodyIn)
  return target;
}

size_t ResponseBodyIn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:response_body.ResponseBodyIn)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data = 1;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseBodyIn::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResponseBodyIn::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseBodyIn::GetClassData() const { return &_class_data_; }

void ResponseBodyIn::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResponseBodyIn *>(to)->MergeFrom(
      static_cast<const ResponseBodyIn &>(from));
}


void ResponseBodyIn::MergeFrom(const ResponseBodyIn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:response_body.ResponseBodyIn)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseBodyIn::CopyFrom(const ResponseBodyIn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:response_body.ResponseBodyIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseBodyIn::IsInitialized() const {
  return true;
}

void ResponseBodyIn::InternalSwap(ResponseBodyIn* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseBodyIn::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_responseBody_2eproto_getter, &descriptor_table_responseBody_2eproto_once,
      file_level_metadata_responseBody_2eproto[0]);
}

// ===================================================================

class ResponseBodyOut_Response::_Internal {
 public:
};

ResponseBodyOut_Response::ResponseBodyOut_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:response_body.ResponseBodyOut.Response)
}
ResponseBodyOut_Response::ResponseBodyOut_Response(const ResponseBodyOut_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:response_body.ResponseBodyOut.Response)
}

inline void ResponseBodyOut_Response::SharedCtor() {
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ResponseBodyOut_Response::~ResponseBodyOut_Response() {
  // @@protoc_insertion_point(destructor:response_body.ResponseBodyOut.Response)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResponseBodyOut_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResponseBodyOut_Response::ArenaDtor(void* object) {
  ResponseBodyOut_Response* _this = reinterpret_cast< ResponseBodyOut_Response* >(object);
  (void)_this;
}
void ResponseBodyOut_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResponseBodyOut_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResponseBodyOut_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:response_body.ResponseBodyOut.Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseBodyOut_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "response_body.ResponseBodyOut.Response.data"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResponseBodyOut_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:response_body.ResponseBodyOut.Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (!this->_internal_data().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data().data(), static_cast<int>(this->_internal_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "response_body.ResponseBodyOut.Response.data");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:response_body.ResponseBodyOut.Response)
  return target;
}

size_t ResponseBodyOut_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:response_body.ResponseBodyOut.Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data = 1;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseBodyOut_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResponseBodyOut_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseBodyOut_Response::GetClassData() const { return &_class_data_; }

void ResponseBodyOut_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResponseBodyOut_Response *>(to)->MergeFrom(
      static_cast<const ResponseBodyOut_Response &>(from));
}


void ResponseBodyOut_Response::MergeFrom(const ResponseBodyOut_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:response_body.ResponseBodyOut.Response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseBodyOut_Response::CopyFrom(const ResponseBodyOut_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:response_body.ResponseBodyOut.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseBodyOut_Response::IsInitialized() const {
  return true;
}

void ResponseBodyOut_Response::InternalSwap(ResponseBodyOut_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseBodyOut_Response::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_responseBody_2eproto_getter, &descriptor_table_responseBody_2eproto_once,
      file_level_metadata_responseBody_2eproto[1]);
}

// ===================================================================

class ResponseBodyOut::_Internal {
 public:
  static const ::response_body::ResponseBodyOut_Response& response(const ResponseBodyOut* msg);
};

const ::response_body::ResponseBodyOut_Response&
ResponseBodyOut::_Internal::response(const ResponseBodyOut* msg) {
  return *msg->response_;
}
ResponseBodyOut::ResponseBodyOut(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:response_body.ResponseBodyOut)
}
ResponseBodyOut::ResponseBodyOut(const ResponseBodyOut& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_response()) {
    response_ = new ::response_body::ResponseBodyOut_Response(*from.response_);
  } else {
    response_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:response_body.ResponseBodyOut)
}

inline void ResponseBodyOut::SharedCtor() {
response_ = nullptr;
}

ResponseBodyOut::~ResponseBodyOut() {
  // @@protoc_insertion_point(destructor:response_body.ResponseBodyOut)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResponseBodyOut::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete response_;
}

void ResponseBodyOut::ArenaDtor(void* object) {
  ResponseBodyOut* _this = reinterpret_cast< ResponseBodyOut* >(object);
  (void)_this;
}
void ResponseBodyOut::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResponseBodyOut::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResponseBodyOut::Clear() {
// @@protoc_insertion_point(message_clear_start:response_body.ResponseBodyOut)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseBodyOut::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .response_body.ResponseBodyOut.Response response = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResponseBodyOut::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:response_body.ResponseBodyOut)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .response_body.ResponseBodyOut.Response response = 2;
  if (this->_internal_has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:response_body.ResponseBodyOut)
  return target;
}

size_t ResponseBodyOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:response_body.ResponseBodyOut)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .response_body.ResponseBodyOut.Response response = 2;
  if (this->_internal_has_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *response_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseBodyOut::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResponseBodyOut::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseBodyOut::GetClassData() const { return &_class_data_; }

void ResponseBodyOut::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResponseBodyOut *>(to)->MergeFrom(
      static_cast<const ResponseBodyOut &>(from));
}


void ResponseBodyOut::MergeFrom(const ResponseBodyOut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:response_body.ResponseBodyOut)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_response()) {
    _internal_mutable_response()->::response_body::ResponseBodyOut_Response::MergeFrom(from._internal_response());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseBodyOut::CopyFrom(const ResponseBodyOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:response_body.ResponseBodyOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseBodyOut::IsInitialized() const {
  return true;
}

void ResponseBodyOut::InternalSwap(ResponseBodyOut* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(response_, other->response_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseBodyOut::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_responseBody_2eproto_getter, &descriptor_table_responseBody_2eproto_once,
      file_level_metadata_responseBody_2eproto[2]);
}

// ===================================================================

class RepeatedResponseBodyOut_Response::_Internal {
 public:
};

RepeatedResponseBodyOut_Response::RepeatedResponseBodyOut_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:response_body.RepeatedResponseBodyOut.Response)
}
RepeatedResponseBodyOut_Response::RepeatedResponseBodyOut_Response(const RepeatedResponseBodyOut_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:response_body.RepeatedResponseBodyOut.Response)
}

inline void RepeatedResponseBodyOut_Response::SharedCtor() {
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
type_ = 0;
}

RepeatedResponseBodyOut_Response::~RepeatedResponseBodyOut_Response() {
  // @@protoc_insertion_point(destructor:response_body.RepeatedResponseBodyOut.Response)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RepeatedResponseBodyOut_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RepeatedResponseBodyOut_Response::ArenaDtor(void* object) {
  RepeatedResponseBodyOut_Response* _this = reinterpret_cast< RepeatedResponseBodyOut_Response* >(object);
  (void)_this;
}
void RepeatedResponseBodyOut_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RepeatedResponseBodyOut_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RepeatedResponseBodyOut_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:response_body.RepeatedResponseBodyOut.Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RepeatedResponseBodyOut_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "response_body.RepeatedResponseBodyOut.Response.data"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .response_body.RepeatedResponseBodyOut.Response.ResponseType type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::response_body::RepeatedResponseBodyOut_Response_ResponseType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RepeatedResponseBodyOut_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:response_body.RepeatedResponseBodyOut.Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (!this->_internal_data().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data().data(), static_cast<int>(this->_internal_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "response_body.RepeatedResponseBodyOut.Response.data");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_data(), target);
  }

  // .response_body.RepeatedResponseBodyOut.Response.ResponseType type = 3;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:response_body.RepeatedResponseBodyOut.Response)
  return target;
}

size_t RepeatedResponseBodyOut_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:response_body.RepeatedResponseBodyOut.Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data = 1;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data());
  }

  // .response_body.RepeatedResponseBodyOut.Response.ResponseType type = 3;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RepeatedResponseBodyOut_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RepeatedResponseBodyOut_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RepeatedResponseBodyOut_Response::GetClassData() const { return &_class_data_; }

void RepeatedResponseBodyOut_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RepeatedResponseBodyOut_Response *>(to)->MergeFrom(
      static_cast<const RepeatedResponseBodyOut_Response &>(from));
}


void RepeatedResponseBodyOut_Response::MergeFrom(const RepeatedResponseBodyOut_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:response_body.RepeatedResponseBodyOut.Response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RepeatedResponseBodyOut_Response::CopyFrom(const RepeatedResponseBodyOut_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:response_body.RepeatedResponseBodyOut.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepeatedResponseBodyOut_Response::IsInitialized() const {
  return true;
}

void RepeatedResponseBodyOut_Response::InternalSwap(RepeatedResponseBodyOut_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RepeatedResponseBodyOut_Response::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_responseBody_2eproto_getter, &descriptor_table_responseBody_2eproto_once,
      file_level_metadata_responseBody_2eproto[3]);
}

// ===================================================================

class RepeatedResponseBodyOut::_Internal {
 public:
};

RepeatedResponseBodyOut::RepeatedResponseBodyOut(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  response_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:response_body.RepeatedResponseBodyOut)
}
RepeatedResponseBodyOut::RepeatedResponseBodyOut(const RepeatedResponseBodyOut& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      response_(from.response_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:response_body.RepeatedResponseBodyOut)
}

inline void RepeatedResponseBodyOut::SharedCtor() {
}

RepeatedResponseBodyOut::~RepeatedResponseBodyOut() {
  // @@protoc_insertion_point(destructor:response_body.RepeatedResponseBodyOut)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RepeatedResponseBodyOut::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RepeatedResponseBodyOut::ArenaDtor(void* object) {
  RepeatedResponseBodyOut* _this = reinterpret_cast< RepeatedResponseBodyOut* >(object);
  (void)_this;
}
void RepeatedResponseBodyOut::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RepeatedResponseBodyOut::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RepeatedResponseBodyOut::Clear() {
// @@protoc_insertion_point(message_clear_start:response_body.RepeatedResponseBodyOut)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  response_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RepeatedResponseBodyOut::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .response_body.RepeatedResponseBodyOut.Response response = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_response(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RepeatedResponseBodyOut::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:response_body.RepeatedResponseBodyOut)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .response_body.RepeatedResponseBodyOut.Response response = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_response_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_response(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:response_body.RepeatedResponseBodyOut)
  return target;
}

size_t RepeatedResponseBodyOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:response_body.RepeatedResponseBodyOut)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .response_body.RepeatedResponseBodyOut.Response response = 2;
  total_size += 1UL * this->_internal_response_size();
  for (const auto& msg : this->response_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RepeatedResponseBodyOut::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RepeatedResponseBodyOut::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RepeatedResponseBodyOut::GetClassData() const { return &_class_data_; }

void RepeatedResponseBodyOut::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RepeatedResponseBodyOut *>(to)->MergeFrom(
      static_cast<const RepeatedResponseBodyOut &>(from));
}


void RepeatedResponseBodyOut::MergeFrom(const RepeatedResponseBodyOut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:response_body.RepeatedResponseBodyOut)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  response_.MergeFrom(from.response_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RepeatedResponseBodyOut::CopyFrom(const RepeatedResponseBodyOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:response_body.RepeatedResponseBodyOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepeatedResponseBodyOut::IsInitialized() const {
  return true;
}

void RepeatedResponseBodyOut::InternalSwap(RepeatedResponseBodyOut* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  response_.InternalSwap(&other->response_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RepeatedResponseBodyOut::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_responseBody_2eproto_getter, &descriptor_table_responseBody_2eproto_once,
      file_level_metadata_responseBody_2eproto[4]);
}

// ===================================================================

class RepeatedResponseStrings::_Internal {
 public:
};

RepeatedResponseStrings::RepeatedResponseStrings(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  values_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:response_body.RepeatedResponseStrings)
}
RepeatedResponseStrings::RepeatedResponseStrings(const RepeatedResponseStrings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      values_(from.values_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:response_body.RepeatedResponseStrings)
}

inline void RepeatedResponseStrings::SharedCtor() {
}

RepeatedResponseStrings::~RepeatedResponseStrings() {
  // @@protoc_insertion_point(destructor:response_body.RepeatedResponseStrings)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RepeatedResponseStrings::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RepeatedResponseStrings::ArenaDtor(void* object) {
  RepeatedResponseStrings* _this = reinterpret_cast< RepeatedResponseStrings* >(object);
  (void)_this;
}
void RepeatedResponseStrings::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RepeatedResponseStrings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RepeatedResponseStrings::Clear() {
// @@protoc_insertion_point(message_clear_start:response_body.RepeatedResponseStrings)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RepeatedResponseStrings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_values();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "response_body.RepeatedResponseStrings.values"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RepeatedResponseStrings::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:response_body.RepeatedResponseStrings)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string values = 1;
  for (int i = 0, n = this->_internal_values_size(); i < n; i++) {
    const auto& s = this->_internal_values(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "response_body.RepeatedResponseStrings.values");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:response_body.RepeatedResponseStrings)
  return target;
}

size_t RepeatedResponseStrings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:response_body.RepeatedResponseStrings)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string values = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(values_.size());
  for (int i = 0, n = values_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      values_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RepeatedResponseStrings::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RepeatedResponseStrings::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RepeatedResponseStrings::GetClassData() const { return &_class_data_; }

void RepeatedResponseStrings::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RepeatedResponseStrings *>(to)->MergeFrom(
      static_cast<const RepeatedResponseStrings &>(from));
}


void RepeatedResponseStrings::MergeFrom(const RepeatedResponseStrings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:response_body.RepeatedResponseStrings)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RepeatedResponseStrings::CopyFrom(const RepeatedResponseStrings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:response_body.RepeatedResponseStrings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepeatedResponseStrings::IsInitialized() const {
  return true;
}

void RepeatedResponseStrings::InternalSwap(RepeatedResponseStrings* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RepeatedResponseStrings::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_responseBody_2eproto_getter, &descriptor_table_responseBody_2eproto_once,
      file_level_metadata_responseBody_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace response_body
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::response_body::ResponseBodyIn* Arena::CreateMaybeMessage< ::response_body::ResponseBodyIn >(Arena* arena) {
  return Arena::CreateMessageInternal< ::response_body::ResponseBodyIn >(arena);
}
template<> PROTOBUF_NOINLINE ::response_body::ResponseBodyOut_Response* Arena::CreateMaybeMessage< ::response_body::ResponseBodyOut_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::response_body::ResponseBodyOut_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::response_body::ResponseBodyOut* Arena::CreateMaybeMessage< ::response_body::ResponseBodyOut >(Arena* arena) {
  return Arena::CreateMessageInternal< ::response_body::ResponseBodyOut >(arena);
}
template<> PROTOBUF_NOINLINE ::response_body::RepeatedResponseBodyOut_Response* Arena::CreateMaybeMessage< ::response_body::RepeatedResponseBodyOut_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::response_body::RepeatedResponseBodyOut_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::response_body::RepeatedResponseBodyOut* Arena::CreateMaybeMessage< ::response_body::RepeatedResponseBodyOut >(Arena* arena) {
  return Arena::CreateMessageInternal< ::response_body::RepeatedResponseBodyOut >(arena);
}
template<> PROTOBUF_NOINLINE ::response_body::RepeatedResponseStrings* Arena::CreateMaybeMessage< ::response_body::RepeatedResponseStrings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::response_body::RepeatedResponseStrings >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
