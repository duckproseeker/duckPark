// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: protobuf/camel-grpc.proto

package camel

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Language int32

const (
	Language_en_us Language = 0
	Language_zh_cn Language = 1
)

// Enum value maps for Language.
var (
	Language_name = map[int32]string{
		0: "en_us",
		1: "zh_cn",
	}
	Language_value = map[string]int32{
		"en_us": 0,
		"zh_cn": 1,
	}
)

func (x Language) Enum() *Language {
	p := new(Language)
	*p = x
	return p
}

func (x Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Language) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_camel_grpc_proto_enumTypes[0].Descriptor()
}

func (Language) Type() protoreflect.EnumType {
	return &file_protobuf_camel_grpc_proto_enumTypes[0]
}

func (x Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Language.Descriptor instead.
func (Language) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{0}
}

type AgvInfo_Alarm_Source int32

const (
	AgvInfo_Alarm_PLC_MCU    AgvInfo_Alarm_Source = 0
	AgvInfo_Alarm_Camel      AgvInfo_Alarm_Source = 1 //Camel
	AgvInfo_Alarm_Controller AgvInfo_Alarm_Source = 2
	AgvInfo_Alarm_Nav        AgvInfo_Alarm_Source = 3
	AgvInfo_Alarm_AGVS       AgvInfo_Alarm_Source = 4 //AGVS
	AgvInfo_Alarm_Defender   AgvInfo_Alarm_Source = 5
	AgvInfo_Alarm_Unknow     AgvInfo_Alarm_Source = 6
)

// Enum value maps for AgvInfo_Alarm_Source.
var (
	AgvInfo_Alarm_Source_name = map[int32]string{
		0: "PLC_MCU",
		1: "Camel",
		2: "Controller",
		3: "Nav",
		4: "AGVS",
		5: "Defender",
		6: "Unknow",
	}
	AgvInfo_Alarm_Source_value = map[string]int32{
		"PLC_MCU":    0,
		"Camel":      1,
		"Controller": 2,
		"Nav":        3,
		"AGVS":       4,
		"Defender":   5,
		"Unknow":     6,
	}
)

func (x AgvInfo_Alarm_Source) Enum() *AgvInfo_Alarm_Source {
	p := new(AgvInfo_Alarm_Source)
	*p = x
	return p
}

func (x AgvInfo_Alarm_Source) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgvInfo_Alarm_Source) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_camel_grpc_proto_enumTypes[1].Descriptor()
}

func (AgvInfo_Alarm_Source) Type() protoreflect.EnumType {
	return &file_protobuf_camel_grpc_proto_enumTypes[1]
}

func (x AgvInfo_Alarm_Source) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgvInfo_Alarm_Source.Descriptor instead.
func (AgvInfo_Alarm_Source) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{0, 2, 0}
}

type AgvInfo_Alarm_Level int32

const (
	AgvInfo_Alarm_General AgvInfo_Alarm_Level = 0 //一般
	AgvInfo_Alarm_Serious AgvInfo_Alarm_Level = 1 //严重
	AgvInfo_Alarm_Fatal   AgvInfo_Alarm_Level = 2 //致命
)

// Enum value maps for AgvInfo_Alarm_Level.
var (
	AgvInfo_Alarm_Level_name = map[int32]string{
		0: "General",
		1: "Serious",
		2: "Fatal",
	}
	AgvInfo_Alarm_Level_value = map[string]int32{
		"General": 0,
		"Serious": 1,
		"Fatal":   2,
	}
)

func (x AgvInfo_Alarm_Level) Enum() *AgvInfo_Alarm_Level {
	p := new(AgvInfo_Alarm_Level)
	*p = x
	return p
}

func (x AgvInfo_Alarm_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgvInfo_Alarm_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_camel_grpc_proto_enumTypes[2].Descriptor()
}

func (AgvInfo_Alarm_Level) Type() protoreflect.EnumType {
	return &file_protobuf_camel_grpc_proto_enumTypes[2]
}

func (x AgvInfo_Alarm_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgvInfo_Alarm_Level.Descriptor instead.
func (AgvInfo_Alarm_Level) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{0, 2, 1}
}

//AGV 内部信息
type AgvInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Montion   *AgvInfo_Motion     `protobuf:"bytes,1,opt,name=montion,proto3" json:"montion,omitempty"`       //运动控制参数
	Postion   *Position           `protobuf:"bytes,2,opt,name=postion,proto3" json:"postion,omitempty"`       //导航定位参数
	Station   *AgvInfo_UIStation  `protobuf:"bytes,3,opt,name=station,proto3" json:"station,omitempty"`       //当前站点
	Alarm     []*AgvInfo_Alarm    `protobuf:"bytes,4,rep,name=alarm,proto3" json:"alarm,omitempty"`           //告警信息
	Battery   *Battery            `protobuf:"bytes,5,opt,name=battery,proto3" json:"battery,omitempty"`       //电池信息
	RunMode   int32               `protobuf:"varint,6,opt,name=runMode,proto3" json:"runMode,omitempty"`      //运行模式，0手动，1调试，2自动
	Height    float32             `protobuf:"fixed32,7,opt,name=height,proto3" json:"height,omitempty"`       //叉子高度
	Route     *PathCollection     `protobuf:"bytes,9,opt,name=route,proto3" json:"route,omitempty"`           //当前路径
	RunStatus int32               `protobuf:"varint,10,opt,name=runStatus,proto3" json:"runStatus,omitempty"` //运行状态，0停止，1预备态，2运行态，3暂停态
	Version   *Version            `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`      //camel版本信息
	Debug     *AgvInfo_DebugInfo  `protobuf:"bytes,12,opt,name=debug,proto3" json:"debug,omitempty"`          //调试信息
	AgvsInfo  *CamelSysInfo       `protobuf:"bytes,13,opt,name=agvsInfo,proto3" json:"agvsInfo,omitempty"`    //agvs信息
	GrpcTask  *GrpcTaskInfomation `protobuf:"bytes,14,opt,name=grpcTask,proto3" json:"grpcTask,omitempty"`    //单机任务信息
}

func (x *AgvInfo) Reset() {
	*x = AgvInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgvInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgvInfo) ProtoMessage() {}

func (x *AgvInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgvInfo.ProtoReflect.Descriptor instead.
func (*AgvInfo) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{0}
}

func (x *AgvInfo) GetMontion() *AgvInfo_Motion {
	if x != nil {
		return x.Montion
	}
	return nil
}

func (x *AgvInfo) GetPostion() *Position {
	if x != nil {
		return x.Postion
	}
	return nil
}

func (x *AgvInfo) GetStation() *AgvInfo_UIStation {
	if x != nil {
		return x.Station
	}
	return nil
}

func (x *AgvInfo) GetAlarm() []*AgvInfo_Alarm {
	if x != nil {
		return x.Alarm
	}
	return nil
}

func (x *AgvInfo) GetBattery() *Battery {
	if x != nil {
		return x.Battery
	}
	return nil
}

func (x *AgvInfo) GetRunMode() int32 {
	if x != nil {
		return x.RunMode
	}
	return 0
}

func (x *AgvInfo) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *AgvInfo) GetRoute() *PathCollection {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *AgvInfo) GetRunStatus() int32 {
	if x != nil {
		return x.RunStatus
	}
	return 0
}

func (x *AgvInfo) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *AgvInfo) GetDebug() *AgvInfo_DebugInfo {
	if x != nil {
		return x.Debug
	}
	return nil
}

func (x *AgvInfo) GetAgvsInfo() *CamelSysInfo {
	if x != nil {
		return x.AgvsInfo
	}
	return nil
}

func (x *AgvInfo) GetGrpcTask() *GrpcTaskInfomation {
	if x != nil {
		return x.GrpcTask
	}
	return nil
}

//UI向Camel请求的配置信息
type UIConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NavEndpoint string   `protobuf:"bytes,1,opt,name=navEndpoint,proto3" json:"navEndpoint,omitempty"`
	Language    Language `protobuf:"varint,2,opt,name=language,proto3,enum=Language" json:"language,omitempty"`
}

func (x *UIConfig) Reset() {
	*x = UIConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIConfig) ProtoMessage() {}

func (x *UIConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIConfig.ProtoReflect.Descriptor instead.
func (*UIConfig) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{1}
}

func (x *UIConfig) GetNavEndpoint() string {
	if x != nil {
		return x.NavEndpoint
	}
	return ""
}

func (x *UIConfig) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_en_us
}

//版本信息
type Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CamelVersion    string `protobuf:"bytes,1,opt,name=CamelVersion,proto3" json:"CamelVersion,omitempty"`
	DBVersion       []byte `protobuf:"bytes,2,opt,name=DBVersion,proto3" json:"DBVersion,omitempty"`
	DefenderVersion string `protobuf:"bytes,3,opt,name=DefenderVersion,proto3" json:"DefenderVersion,omitempty"`
	PackageVersion  string `protobuf:"bytes,4,opt,name=PackageVersion,proto3" json:"PackageVersion,omitempty"`
}

func (x *Version) Reset() {
	*x = Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{2}
}

func (x *Version) GetCamelVersion() string {
	if x != nil {
		return x.CamelVersion
	}
	return ""
}

func (x *Version) GetDBVersion() []byte {
	if x != nil {
		return x.DBVersion
	}
	return nil
}

func (x *Version) GetDefenderVersion() string {
	if x != nil {
		return x.DefenderVersion
	}
	return ""
}

func (x *Version) GetPackageVersion() string {
	if x != nil {
		return x.PackageVersion
	}
	return ""
}

type Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsContinue   bool `protobuf:"varint,1,opt,name=isContinue,proto3" json:"isContinue,omitempty"`     //继续运行
	ClearPath    bool `protobuf:"varint,2,opt,name=clearPath,proto3" json:"clearPath,omitempty"`       //清除路径
	ClearAction  bool `protobuf:"varint,3,opt,name=clearAction,proto3" json:"clearAction,omitempty"`   //清除动作
	DisableCargo bool `protobuf:"varint,4,opt,name=disableCargo,proto3" json:"disableCargo,omitempty"` //屏蔽取货光电
}

func (x *Operation) Reset() {
	*x = Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{3}
}

func (x *Operation) GetIsContinue() bool {
	if x != nil {
		return x.IsContinue
	}
	return false
}

func (x *Operation) GetClearPath() bool {
	if x != nil {
		return x.ClearPath
	}
	return false
}

func (x *Operation) GetClearAction() bool {
	if x != nil {
		return x.ClearAction
	}
	return false
}

func (x *Operation) GetDisableCargo() bool {
	if x != nil {
		return x.DisableCargo
	}
	return false
}

//Camel的配置信息(json格式的字符串)
type CamelCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonString string `protobuf:"bytes,1,opt,name=JsonString,proto3" json:"JsonString,omitempty"`
}

func (x *CamelCfg) Reset() {
	*x = CamelCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CamelCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CamelCfg) ProtoMessage() {}

func (x *CamelCfg) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CamelCfg.ProtoReflect.Descriptor instead.
func (*CamelCfg) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{4}
}

func (x *CamelCfg) GetJsonString() string {
	if x != nil {
		return x.JsonString
	}
	return ""
}

//Camel中收到的agvs的信息
type CamelSysInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgvsInfo *CamelMessage_AllowFromAgvs  `protobuf:"bytes,1,opt,name=agvsInfo,proto3" json:"agvsInfo,omitempty"`
	TaskInfo *CamelMessage_MissonFromAgvs `protobuf:"bytes,2,opt,name=taskInfo,proto3" json:"taskInfo,omitempty"`
}

func (x *CamelSysInfo) Reset() {
	*x = CamelSysInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CamelSysInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CamelSysInfo) ProtoMessage() {}

func (x *CamelSysInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CamelSysInfo.ProtoReflect.Descriptor instead.
func (*CamelSysInfo) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{5}
}

func (x *CamelSysInfo) GetAgvsInfo() *CamelMessage_AllowFromAgvs {
	if x != nil {
		return x.AgvsInfo
	}
	return nil
}

func (x *CamelSysInfo) GetTaskInfo() *CamelMessage_MissonFromAgvs {
	if x != nil {
		return x.TaskInfo
	}
	return nil
}

type LogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Car     string   `protobuf:"bytes,1,opt,name=car,proto3" json:"car,omitempty"`         //小车名
	Modules []string `protobuf:"bytes,2,rep,name=modules,proto3" json:"modules,omitempty"` //需要获取日志的模块 (camel, localizer, rosplc...)
	Time    []string `protobuf:"bytes,3,rep,name=time,proto3" json:"time,omitempty"`       //获取哪一天的日志 (2020-06-01, 2020-06-02, 2020-06-03)
}

func (x *LogRequest) Reset() {
	*x = LogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRequest) ProtoMessage() {}

func (x *LogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRequest.ProtoReflect.Descriptor instead.
func (*LogRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{6}
}

func (x *LogRequest) GetCar() string {
	if x != nil {
		return x.Car
	}
	return ""
}

func (x *LogRequest) GetModules() []string {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *LogRequest) GetTime() []string {
	if x != nil {
		return x.Time
	}
	return nil
}

type LogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"` //文件路径(ftp://192.168.1.73:21/AGV#01_2020-06-01.zip)
}

func (x *LogResponse) Reset() {
	*x = LogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogResponse) ProtoMessage() {}

func (x *LogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogResponse.ProtoReflect.Descriptor instead.
func (*LogResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{7}
}

func (x *LogResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type RosNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration string `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
	ModifyEnable  bool   `protobuf:"varint,2,opt,name=modify_enable,json=modifyEnable,proto3" json:"modify_enable,omitempty"`
	SetMaster     bool   `protobuf:"varint,3,opt,name=set_master,json=setMaster,proto3" json:"set_master,omitempty"`
	Module        string `protobuf:"bytes,4,opt,name=module,proto3" json:"module,omitempty"`
	Filename      string `protobuf:"bytes,5,opt,name=filename,proto3" json:"filename,omitempty"`
	IsRunning     bool   `protobuf:"varint,6,opt,name=is_running,json=isRunning,proto3" json:"is_running,omitempty"`
}

func (x *RosNode) Reset() {
	*x = RosNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RosNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RosNode) ProtoMessage() {}

func (x *RosNode) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RosNode.ProtoReflect.Descriptor instead.
func (*RosNode) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{8}
}

func (x *RosNode) GetConfiguration() string {
	if x != nil {
		return x.Configuration
	}
	return ""
}

func (x *RosNode) GetModifyEnable() bool {
	if x != nil {
		return x.ModifyEnable
	}
	return false
}

func (x *RosNode) GetSetMaster() bool {
	if x != nil {
		return x.SetMaster
	}
	return false
}

func (x *RosNode) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *RosNode) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *RosNode) GetIsRunning() bool {
	if x != nil {
		return x.IsRunning
	}
	return false
}

type RosNodesCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*RosNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *RosNodesCfg) Reset() {
	*x = RosNodesCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RosNodesCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RosNodesCfg) ProtoMessage() {}

func (x *RosNodesCfg) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RosNodesCfg.ProtoReflect.Descriptor instead.
func (*RosNodesCfg) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{9}
}

func (x *RosNodesCfg) GetNodes() []*RosNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type RosoutMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*RosoutMsg_RosoutInfo `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *RosoutMsg) Reset() {
	*x = RosoutMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RosoutMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RosoutMsg) ProtoMessage() {}

func (x *RosoutMsg) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RosoutMsg.ProtoReflect.Descriptor instead.
func (*RosoutMsg) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{10}
}

func (x *RosoutMsg) GetMessages() []*RosoutMsg_RosoutInfo {
	if x != nil {
		return x.Messages
	}
	return nil
}

type AlarmMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Cleared bool  `protobuf:"varint,2,opt,name=cleared,proto3" json:"cleared,omitempty"`
}

func (x *AlarmMsg) Reset() {
	*x = AlarmMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmMsg) ProtoMessage() {}

func (x *AlarmMsg) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmMsg.ProtoReflect.Descriptor instead.
func (*AlarmMsg) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{11}
}

func (x *AlarmMsg) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AlarmMsg) GetCleared() bool {
	if x != nil {
		return x.Cleared
	}
	return false
}

type NetworkConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Mac     string `protobuf:"bytes,3,opt,name=mac,proto3" json:"mac,omitempty"`
	Netmask string `protobuf:"bytes,4,opt,name=netmask,proto3" json:"netmask,omitempty"`
	Gateway string `protobuf:"bytes,5,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Dns     string `protobuf:"bytes,6,opt,name=dns,proto3" json:"dns,omitempty"`
}

func (x *NetworkConfig) Reset() {
	*x = NetworkConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConfig) ProtoMessage() {}

func (x *NetworkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConfig.ProtoReflect.Descriptor instead.
func (*NetworkConfig) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{12}
}

func (x *NetworkConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkConfig) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NetworkConfig) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *NetworkConfig) GetNetmask() string {
	if x != nil {
		return x.Netmask
	}
	return ""
}

func (x *NetworkConfig) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *NetworkConfig) GetDns() string {
	if x != nil {
		return x.Dns
	}
	return ""
}

type WirlessConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ssid   string         `protobuf:"bytes,1,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Passwd string         `protobuf:"bytes,2,opt,name=passwd,proto3" json:"passwd,omitempty"`
	Config *NetworkConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *WirlessConfig) Reset() {
	*x = WirlessConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WirlessConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WirlessConfig) ProtoMessage() {}

func (x *WirlessConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WirlessConfig.ProtoReflect.Descriptor instead.
func (*WirlessConfig) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{13}
}

func (x *WirlessConfig) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *WirlessConfig) GetPasswd() string {
	if x != nil {
		return x.Passwd
	}
	return ""
}

func (x *WirlessConfig) GetConfig() *NetworkConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type WirlessInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ssid        string `protobuf:"bytes,1,opt,name=ssid,proto3" json:"ssid,omitempty"`
	SignalLevel int32  `protobuf:"varint,2,opt,name=signalLevel,proto3" json:"signalLevel,omitempty"` // 0~4格信号
}

func (x *WirlessInfo) Reset() {
	*x = WirlessInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WirlessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WirlessInfo) ProtoMessage() {}

func (x *WirlessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WirlessInfo.ProtoReflect.Descriptor instead.
func (*WirlessInfo) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{14}
}

func (x *WirlessInfo) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *WirlessInfo) GetSignalLevel() int32 {
	if x != nil {
		return x.SignalLevel
	}
	return 0
}

type WLANList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WirlessList []*WirlessInfo `protobuf:"bytes,1,rep,name=wirlessList,proto3" json:"wirlessList,omitempty"`
}

func (x *WLANList) Reset() {
	*x = WLANList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WLANList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WLANList) ProtoMessage() {}

func (x *WLANList) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WLANList.ProtoReflect.Descriptor instead.
func (*WLANList) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{15}
}

func (x *WLANList) GetWirlessList() []*WirlessInfo {
	if x != nil {
		return x.WirlessList
	}
	return nil
}

type NetworkConfigCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigCollection []*NetworkConfig `protobuf:"bytes,1,rep,name=config_collection,json=configCollection,proto3" json:"config_collection,omitempty"`
}

func (x *NetworkConfigCollection) Reset() {
	*x = NetworkConfigCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkConfigCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConfigCollection) ProtoMessage() {}

func (x *NetworkConfigCollection) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConfigCollection.ProtoReflect.Descriptor instead.
func (*NetworkConfigCollection) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{16}
}

func (x *NetworkConfigCollection) GetConfigCollection() []*NetworkConfig {
	if x != nil {
		return x.ConfigCollection
	}
	return nil
}

type InstallPack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *InstallPack) Reset() {
	*x = InstallPack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallPack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallPack) ProtoMessage() {}

func (x *InstallPack) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallPack.ProtoReflect.Descriptor instead.
func (*InstallPack) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{17}
}

func (x *InstallPack) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type SystemStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   string  `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	CpuUsage  float32 `protobuf:"fixed32,2,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemTotal  int32   `protobuf:"varint,3,opt,name=mem_total,json=memTotal,proto3" json:"mem_total,omitempty"`
	MemUsed   int32   `protobuf:"varint,4,opt,name=mem_used,json=memUsed,proto3" json:"mem_used,omitempty"`
	DiskTotal int32   `protobuf:"varint,5,opt,name=disk_total,json=diskTotal,proto3" json:"disk_total,omitempty"`
	DiskUsed  int32   `protobuf:"varint,6,opt,name=disk_used,json=diskUsed,proto3" json:"disk_used,omitempty"`
}

func (x *SystemStatus) Reset() {
	*x = SystemStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStatus) ProtoMessage() {}

func (x *SystemStatus) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStatus.ProtoReflect.Descriptor instead.
func (*SystemStatus) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{18}
}

func (x *SystemStatus) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SystemStatus) GetCpuUsage() float32 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *SystemStatus) GetMemTotal() int32 {
	if x != nil {
		return x.MemTotal
	}
	return 0
}

func (x *SystemStatus) GetMemUsed() int32 {
	if x != nil {
		return x.MemUsed
	}
	return 0
}

func (x *SystemStatus) GetDiskTotal() int32 {
	if x != nil {
		return x.DiskTotal
	}
	return 0
}

func (x *SystemStatus) GetDiskUsed() int32 {
	if x != nil {
		return x.DiskUsed
	}
	return 0
}

type UpdateStation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarkerType int32 `protobuf:"varint,1,opt,name=marker_type,json=markerType,proto3" json:"marker_type,omitempty"`
}

func (x *UpdateStation) Reset() {
	*x = UpdateStation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStation) ProtoMessage() {}

func (x *UpdateStation) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStation.ProtoReflect.Descriptor instead.
func (*UpdateStation) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateStation) GetMarkerType() int32 {
	if x != nil {
		return x.MarkerType
	}
	return 0
}

type UpdatePose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorInfo *Result   `protobuf:"bytes,1,opt,name=error_info,json=errorInfo,proto3" json:"error_info,omitempty"`
	Pose      *Position `protobuf:"bytes,2,opt,name=pose,proto3" json:"pose,omitempty"`
}

func (x *UpdatePose) Reset() {
	*x = UpdatePose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePose) ProtoMessage() {}

func (x *UpdatePose) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePose.ProtoReflect.Descriptor instead.
func (*UpdatePose) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{20}
}

func (x *UpdatePose) GetErrorInfo() *Result {
	if x != nil {
		return x.ErrorInfo
	}
	return nil
}

func (x *UpdatePose) GetPose() *Position {
	if x != nil {
		return x.Pose
	}
	return nil
}

type AgvInfo_UIStation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StationOnMap  string `protobuf:"bytes,1,opt,name=stationOnMap,proto3" json:"stationOnMap,omitempty"`   //在全局地图上的站点
	StationOnPath string `protobuf:"bytes,2,opt,name=stationOnPath,proto3" json:"stationOnPath,omitempty"` //在运行路径上的站点
	TargetStation string `protobuf:"bytes,3,opt,name=targetStation,proto3" json:"targetStation,omitempty"` //小车通行点
}

func (x *AgvInfo_UIStation) Reset() {
	*x = AgvInfo_UIStation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgvInfo_UIStation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgvInfo_UIStation) ProtoMessage() {}

func (x *AgvInfo_UIStation) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgvInfo_UIStation.ProtoReflect.Descriptor instead.
func (*AgvInfo_UIStation) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AgvInfo_UIStation) GetStationOnMap() string {
	if x != nil {
		return x.StationOnMap
	}
	return ""
}

func (x *AgvInfo_UIStation) GetStationOnPath() string {
	if x != nil {
		return x.StationOnPath
	}
	return ""
}

func (x *AgvInfo_UIStation) GetTargetStation() string {
	if x != nil {
		return x.TargetStation
	}
	return ""
}

//运动控制相关参数
type AgvInfo_Motion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vx  float32 `protobuf:"fixed32,1,opt,name=vx,proto3" json:"vx,omitempty"`
	Vy  float32 `protobuf:"fixed32,2,opt,name=vy,proto3" json:"vy,omitempty"`
	W   float32 `protobuf:"fixed32,3,opt,name=w,proto3" json:"w,omitempty"`
	Od1 float32 `protobuf:"fixed32,4,opt,name=od1,proto3" json:"od1,omitempty"`
	Od2 float32 `protobuf:"fixed32,5,opt,name=od2,proto3" json:"od2,omitempty"`
}

func (x *AgvInfo_Motion) Reset() {
	*x = AgvInfo_Motion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgvInfo_Motion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgvInfo_Motion) ProtoMessage() {}

func (x *AgvInfo_Motion) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgvInfo_Motion.ProtoReflect.Descriptor instead.
func (*AgvInfo_Motion) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{0, 1}
}

func (x *AgvInfo_Motion) GetVx() float32 {
	if x != nil {
		return x.Vx
	}
	return 0
}

func (x *AgvInfo_Motion) GetVy() float32 {
	if x != nil {
		return x.Vy
	}
	return 0
}

func (x *AgvInfo_Motion) GetW() float32 {
	if x != nil {
		return x.W
	}
	return 0
}

func (x *AgvInfo_Motion) GetOd1() float32 {
	if x != nil {
		return x.Od1
	}
	return 0
}

func (x *AgvInfo_Motion) GetOd2() float32 {
	if x != nil {
		return x.Od2
	}
	return 0
}

type AgvInfo_Alarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    AgvInfo_Alarm_Source `protobuf:"varint,1,opt,name=type,proto3,enum=AgvInfo_Alarm_Source" json:"type,omitempty"`  //报警源
	Level   AgvInfo_Alarm_Level  `protobuf:"varint,2,opt,name=level,proto3,enum=AgvInfo_Alarm_Level" json:"level,omitempty"` //级别
	Message []byte               `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`                       //消息描述
	Time    []byte               `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`                             //时间
	Code    int32                `protobuf:"varint,5,opt,name=code,proto3" json:"code,omitempty"`                            //消息id
}

func (x *AgvInfo_Alarm) Reset() {
	*x = AgvInfo_Alarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgvInfo_Alarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgvInfo_Alarm) ProtoMessage() {}

func (x *AgvInfo_Alarm) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgvInfo_Alarm.ProtoReflect.Descriptor instead.
func (*AgvInfo_Alarm) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{0, 2}
}

func (x *AgvInfo_Alarm) GetType() AgvInfo_Alarm_Source {
	if x != nil {
		return x.Type
	}
	return AgvInfo_Alarm_PLC_MCU
}

func (x *AgvInfo_Alarm) GetLevel() AgvInfo_Alarm_Level {
	if x != nil {
		return x.Level
	}
	return AgvInfo_Alarm_General
}

func (x *AgvInfo_Alarm) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *AgvInfo_Alarm) GetTime() []byte {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *AgvInfo_Alarm) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type AgvInfo_DebugInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vx                       float32 `protobuf:"fixed32,1,opt,name=Vx,proto3" json:"Vx,omitempty"` // 期望速度
	Vy                       float32 `protobuf:"fixed32,2,opt,name=Vy,proto3" json:"Vy,omitempty"`
	W                        float32 `protobuf:"fixed32,3,opt,name=W,proto3" json:"W,omitempty"`
	GoalX                    float32 `protobuf:"fixed32,4,opt,name=GoalX,proto3" json:"GoalX,omitempty"` // 目标点坐标
	GoalY                    float32 `protobuf:"fixed32,5,opt,name=GoalY,proto3" json:"GoalY,omitempty"`
	Timestamp                uint64  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                // 时间戳
	TaskAverageVelocity      float32 `protobuf:"fixed32,7,opt,name=TaskAverageVelocity,proto3" json:"TaskAverageVelocity,omitempty"`           // 当前任务运行效率
	TotalTaskAverageVelocity float32 `protobuf:"fixed32,8,opt,name=TotalTaskAverageVelocity,proto3" json:"TotalTaskAverageVelocity,omitempty"` // 总的任务运行效率
	TotalOdometry            float32 `protobuf:"fixed32,9,opt,name=TotalOdometry,proto3" json:"TotalOdometry,omitempty"`                       // 总里程数
	TotalRuntime             float32 `protobuf:"fixed32,10,opt,name=TotalRuntime,proto3" json:"TotalRuntime,omitempty"`                        // 总运行时间
}

func (x *AgvInfo_DebugInfo) Reset() {
	*x = AgvInfo_DebugInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgvInfo_DebugInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgvInfo_DebugInfo) ProtoMessage() {}

func (x *AgvInfo_DebugInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgvInfo_DebugInfo.ProtoReflect.Descriptor instead.
func (*AgvInfo_DebugInfo) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{0, 3}
}

func (x *AgvInfo_DebugInfo) GetVx() float32 {
	if x != nil {
		return x.Vx
	}
	return 0
}

func (x *AgvInfo_DebugInfo) GetVy() float32 {
	if x != nil {
		return x.Vy
	}
	return 0
}

func (x *AgvInfo_DebugInfo) GetW() float32 {
	if x != nil {
		return x.W
	}
	return 0
}

func (x *AgvInfo_DebugInfo) GetGoalX() float32 {
	if x != nil {
		return x.GoalX
	}
	return 0
}

func (x *AgvInfo_DebugInfo) GetGoalY() float32 {
	if x != nil {
		return x.GoalY
	}
	return 0
}

func (x *AgvInfo_DebugInfo) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *AgvInfo_DebugInfo) GetTaskAverageVelocity() float32 {
	if x != nil {
		return x.TaskAverageVelocity
	}
	return 0
}

func (x *AgvInfo_DebugInfo) GetTotalTaskAverageVelocity() float32 {
	if x != nil {
		return x.TotalTaskAverageVelocity
	}
	return 0
}

func (x *AgvInfo_DebugInfo) GetTotalOdometry() float32 {
	if x != nil {
		return x.TotalOdometry
	}
	return 0
}

func (x *AgvInfo_DebugInfo) GetTotalRuntime() float32 {
	if x != nil {
		return x.TotalRuntime
	}
	return 0
}

type RosoutMsg_RosoutInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level int32  `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Msg   string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Topic string `protobuf:"bytes,4,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *RosoutMsg_RosoutInfo) Reset() {
	*x = RosoutMsg_RosoutInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_grpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RosoutMsg_RosoutInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RosoutMsg_RosoutInfo) ProtoMessage() {}

func (x *RosoutMsg_RosoutInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_grpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RosoutMsg_RosoutInfo.ProtoReflect.Descriptor instead.
func (*RosoutMsg_RosoutInfo) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_grpc_proto_rawDescGZIP(), []int{10, 0}
}

func (x *RosoutMsg_RosoutInfo) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *RosoutMsg_RosoutInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RosoutMsg_RosoutInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RosoutMsg_RosoutInfo) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

var File_protobuf_camel_grpc_proto protoreflect.FileDescriptor

var file_protobuf_camel_grpc_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x61, 0x6d, 0x65, 0x6c,
	0x2d, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x61, 0x6d, 0x65, 0x6c, 0x2d, 0x61, 0x67, 0x76, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x63, 0x61, 0x6d, 0x65, 0x6c, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x61,
	0x6d, 0x65, 0x6c, 0x2d, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb9, 0x0a, 0x0a, 0x07, 0x41, 0x67,
	0x76, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x67, 0x76, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x70, 0x6f,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x41, 0x67, 0x76, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x55, 0x49, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x05, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x67, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x52, 0x05, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x12, 0x22, 0x0a, 0x07, 0x62, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x42, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x79, 0x52, 0x07, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x75, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x75, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x25, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x50, 0x61, 0x74, 0x68, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x75, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x41, 0x67, 0x76, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x64, 0x65, 0x62,
	0x75, 0x67, 0x12, 0x29, 0x0a, 0x08, 0x61, 0x67, 0x76, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x61, 0x67, 0x76, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a,
	0x08, 0x67, 0x72, 0x70, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x67, 0x72, 0x70, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x1a, 0x7b,
	0x0a, 0x09, 0x55, 0x49, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x4d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x4d, 0x61, 0x70, 0x12,
	0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x5a, 0x0a, 0x06, 0x4d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x02, 0x76, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x02, 0x76, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x01, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x64, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x03, 0x6f, 0x64, 0x31, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x64, 0x32, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x03, 0x6f, 0x64, 0x32, 0x1a, 0xad, 0x02, 0x0a, 0x05, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x41, 0x67, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x2e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x41, 0x67,
	0x76, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x5d, 0x0a, 0x06, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x4c, 0x43, 0x5f, 0x4d, 0x43, 0x55, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03,
	0x4e, 0x61, 0x76, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x47, 0x56, 0x53, 0x10, 0x04, 0x12,
	0x0c, 0x0a, 0x08, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x10, 0x05, 0x12, 0x0a, 0x0a,
	0x06, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x10, 0x06, 0x22, 0x2c, 0x0a, 0x05, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x46, 0x61, 0x74, 0x61, 0x6c, 0x10, 0x02, 0x1a, 0xbb, 0x02, 0x0a, 0x09, 0x44, 0x65, 0x62, 0x75,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x56, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x02, 0x56, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x56, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x02, 0x56, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x57, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x01, 0x57, 0x12, 0x14, 0x0a, 0x05, 0x47, 0x6f, 0x61, 0x6c, 0x58, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x47, 0x6f, 0x61, 0x6c, 0x58, 0x12, 0x14, 0x0a, 0x05, 0x47, 0x6f, 0x61,
	0x6c, 0x59, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x47, 0x6f, 0x61, 0x6c, 0x59, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x30, 0x0a,
	0x13, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x56, 0x65, 0x6c, 0x6f,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x54, 0x61, 0x73, 0x6b,
	0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x3a, 0x0a, 0x18, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x18, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x64, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x64, 0x6f, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x08, 0x55, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x76, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x76, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x07, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61,
	0x6d, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x42,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x44,
	0x42, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x66, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x09, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x43, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x65, 0x61,
	0x72, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6c, 0x65,
	0x61, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x6c, 0x65,
	0x61, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x22, 0x2a, 0x0a, 0x08,
	0x43, 0x61, 0x6d, 0x65, 0x6c, 0x43, 0x66, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x4a, 0x73, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4a, 0x73,
	0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x81, 0x01, 0x0a, 0x0c, 0x43, 0x61, 0x6d,
	0x65, 0x6c, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x08, 0x61, 0x67, 0x76,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x61,
	0x6d, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x46, 0x72, 0x6f, 0x6d, 0x41, 0x67, 0x76, 0x73, 0x52, 0x08, 0x61, 0x67, 0x76, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x38, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x67,
	0x76, 0x73, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4c, 0x0a, 0x0a,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x61,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x21, 0x0a, 0x0b, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0xc6, 0x01,
	0x0a, 0x07, 0x52, 0x6f, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x65, 0x74, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x72, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x2d, 0x0a, 0x0b, 0x52, 0x6f, 0x73, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x43, 0x66, 0x67, 0x12, 0x1e, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x52, 0x6f, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x09, 0x52, 0x6f, 0x73, 0x6f, 0x75, 0x74,
	0x4d, 0x73, 0x67, 0x12, 0x31, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x52, 0x6f, 0x73, 0x6f, 0x75, 0x74, 0x4d, 0x73,
	0x67, 0x2e, 0x52, 0x6f, 0x73, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x5e, 0x0a, 0x0a, 0x52, 0x6f, 0x73, 0x6f, 0x75, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x22, 0x38, 0x0a, 0x08, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4d,
	0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64,
	0x22, 0x95, 0x01, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x61, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x6d, 0x61, 0x73, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6e, 0x73, 0x22, 0x63, 0x0a, 0x0d, 0x57, 0x69, 0x72, 0x6c,
	0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x73, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x73, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x64, 0x12, 0x26, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x43, 0x0a,
	0x0b, 0x57, 0x69, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x73, 0x69, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x22, 0x3a, 0x0a, 0x08, 0x57, 0x4c, 0x41, 0x4e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x0b, 0x77, 0x69, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x57, 0x69, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0b, 0x77, 0x69, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x56,
	0x0a, 0x17, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x11, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x29, 0x0a, 0x0b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xb9, 0x01, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65,
	0x6d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x5f, 0x75, 0x73,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x55, 0x73, 0x65,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x65, 0x64, 0x22, 0x30, 0x0a,
	0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x53, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x65, 0x12, 0x26, 0x0a,
	0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x70, 0x6f, 0x73, 0x65, 0x2a, 0x20, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x12, 0x09, 0x0a, 0x05, 0x65, 0x6e, 0x5f, 0x75, 0x73, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x7a,
	0x68, 0x5f, 0x63, 0x6e, 0x10, 0x01, 0x32, 0x97, 0x0e, 0x0a, 0x0a, 0x41, 0x67, 0x76, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d,
	0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x08, 0x2e, 0x49, 0x53, 0x65, 0x65, 0x4d, 0x61, 0x70,
	0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x20, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x2e, 0x49, 0x53, 0x65, 0x65, 0x4d, 0x61,
	0x70, 0x1a, 0x08, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x41, 0x67, 0x76, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x08, 0x2e, 0x41, 0x67, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x0f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x09, 0x2e, 0x55, 0x49, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x38, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0d, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x41, 0x67, 0x76, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x41, 0x67, 0x76,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0d, 0x2e, 0x43, 0x61, 0x6d, 0x65,
	0x6c, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64,
	0x54, 0x6f, 0x41, 0x67, 0x76, 0x73, 0x12, 0x0d, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21,
	0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x41, 0x67, 0x76, 0x12, 0x0a, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x21, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x43, 0x66, 0x67,
	0x12, 0x09, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x43, 0x66, 0x67, 0x1a, 0x07, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x6c,
	0x43, 0x66, 0x67, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x09, 0x2e, 0x43, 0x61,
	0x6d, 0x65, 0x6c, 0x43, 0x66, 0x67, 0x12, 0x41, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d,
	0x65, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0f, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x09, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1c, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d,
	0x41, 0x67, 0x76, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x35, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x66, 0x67, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0c, 0x2e, 0x52, 0x6f, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x43, 0x66, 0x67, 0x12, 0x22, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x73, 0x4e, 0x6f, 0x64,
	0x65, 0x43, 0x66, 0x67, 0x12, 0x08, 0x2e, 0x52, 0x6f, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x1a, 0x07,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x66, 0x67, 0x12, 0x08, 0x2e, 0x52, 0x6f, 0x73, 0x4e, 0x6f,
	0x64, 0x65, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x53,
	0x74, 0x6f, 0x70, 0x52, 0x6f, 0x73, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x2e, 0x52, 0x6f, 0x73,
	0x4e, 0x6f, 0x64, 0x65, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x73, 0x6f, 0x75, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0a, 0x2e, 0x52, 0x6f, 0x73, 0x6f, 0x75, 0x74, 0x4d, 0x73,
	0x67, 0x12, 0x44, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x41, 0x76, 0x6f, 0x69, 0x64, 0x61, 0x6e, 0x63,
	0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x18, 0x2e, 0x41, 0x76, 0x6f, 0x69, 0x64, 0x61, 0x6e, 0x63,
	0x65, 0x41, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x0b, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x09, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4d, 0x73,
	0x67, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x17, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x18, 0x2e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x57, 0x4c, 0x41, 0x4e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x09, 0x2e, 0x57, 0x4c, 0x41, 0x4e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0b,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x57, 0x4c, 0x41, 0x4e, 0x12, 0x0e, 0x2e, 0x57, 0x69,
	0x72, 0x6c, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x07, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x0b, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c,
	0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12,
	0x0c, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x1a, 0x07, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x31, 0x0a, 0x0e, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61,
	0x72, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x53, 0x6f, 0x66,
	0x74, 0x77, 0x61, 0x72, 0x65, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x0c, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x1a, 0x07, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x34, 0x0a, 0x11, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65,
	0x44, 0x6f, 0x77, 0x6e, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x53, 0x74,
	0x69, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x08, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x70, 0x61, 0x64, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x0a,
	0x11, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x12, 0x0f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x1a, 0x06, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2f, 0x0a, 0x10, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x12, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x35, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0c, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x3c, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x30, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x65, 0x12, 0x0e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x17, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x2e, 0x47, 0x72, 0x70, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x14, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x36, 0x0a, 0x15, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x12, 0x14, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x63, 0x61, 0x6d, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_protobuf_camel_grpc_proto_rawDescOnce sync.Once
	file_protobuf_camel_grpc_proto_rawDescData = file_protobuf_camel_grpc_proto_rawDesc
)

func file_protobuf_camel_grpc_proto_rawDescGZIP() []byte {
	file_protobuf_camel_grpc_proto_rawDescOnce.Do(func() {
		file_protobuf_camel_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_camel_grpc_proto_rawDescData)
	})
	return file_protobuf_camel_grpc_proto_rawDescData
}

var file_protobuf_camel_grpc_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_protobuf_camel_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_protobuf_camel_grpc_proto_goTypes = []interface{}{
	(Language)(0),                       // 0: Language
	(AgvInfo_Alarm_Source)(0),           // 1: AgvInfo.Alarm.Source
	(AgvInfo_Alarm_Level)(0),            // 2: AgvInfo.Alarm.Level
	(*AgvInfo)(nil),                     // 3: AgvInfo
	(*UIConfig)(nil),                    // 4: UIConfig
	(*Version)(nil),                     // 5: Version
	(*Operation)(nil),                   // 6: Operation
	(*CamelCfg)(nil),                    // 7: CamelCfg
	(*CamelSysInfo)(nil),                // 8: CamelSysInfo
	(*LogRequest)(nil),                  // 9: LogRequest
	(*LogResponse)(nil),                 // 10: LogResponse
	(*RosNode)(nil),                     // 11: RosNode
	(*RosNodesCfg)(nil),                 // 12: RosNodesCfg
	(*RosoutMsg)(nil),                   // 13: RosoutMsg
	(*AlarmMsg)(nil),                    // 14: AlarmMsg
	(*NetworkConfig)(nil),               // 15: NetworkConfig
	(*WirlessConfig)(nil),               // 16: WirlessConfig
	(*WirlessInfo)(nil),                 // 17: WirlessInfo
	(*WLANList)(nil),                    // 18: WLANList
	(*NetworkConfigCollection)(nil),     // 19: NetworkConfigCollection
	(*InstallPack)(nil),                 // 20: InstallPack
	(*SystemStatus)(nil),                // 21: SystemStatus
	(*UpdateStation)(nil),               // 22: UpdateStation
	(*UpdatePose)(nil),                  // 23: UpdatePose
	(*AgvInfo_UIStation)(nil),           // 24: AgvInfo.UIStation
	(*AgvInfo_Motion)(nil),              // 25: AgvInfo.Motion
	(*AgvInfo_Alarm)(nil),               // 26: AgvInfo.Alarm
	(*AgvInfo_DebugInfo)(nil),           // 27: AgvInfo.DebugInfo
	(*RosoutMsg_RosoutInfo)(nil),        // 28: RosoutMsg.RosoutInfo
	(*Position)(nil),                    // 29: Position
	(*Battery)(nil),                     // 30: Battery
	(*PathCollection)(nil),              // 31: PathCollection
	(*GrpcTaskInfomation)(nil),          // 32: GrpcTaskInfomation
	(*CamelMessage_AllowFromAgvs)(nil),  // 33: CamelMessage.AllowFromAgvs
	(*CamelMessage_MissonFromAgvs)(nil), // 34: CamelMessage.MissonFromAgvs
	(*Result)(nil),                      // 35: Result
	(*ISeeMap)(nil),                     // 36: ISeeMap
	(*emptypb.Empty)(nil),               // 37: google.protobuf.Empty
	(*CamelMessage)(nil),                // 38: CamelMessage
	(*AvoidanceAreaCollection)(nil),     // 39: AvoidanceAreaCollection
	(*Gamepad)(nil),                     // 40: Gamepad
	(*GamepadControl)(nil),              // 41: GamepadControl
	(*MatchPointCommand)(nil),           // 42: MatchPointCommand
	(*GrpcTaskOperation)(nil),           // 43: GrpcTaskOperation
	(*GrpcTaskAllocations)(nil),         // 44: GrpcTaskAllocations
	(*Token)(nil),                       // 45: Token
	(*MatchPoints)(nil),                 // 46: MatchPoints
}
var file_protobuf_camel_grpc_proto_depIdxs = []int32{
	25, // 0: AgvInfo.montion:type_name -> AgvInfo.Motion
	29, // 1: AgvInfo.postion:type_name -> Position
	24, // 2: AgvInfo.station:type_name -> AgvInfo.UIStation
	26, // 3: AgvInfo.alarm:type_name -> AgvInfo.Alarm
	30, // 4: AgvInfo.battery:type_name -> Battery
	31, // 5: AgvInfo.route:type_name -> PathCollection
	5,  // 6: AgvInfo.version:type_name -> Version
	27, // 7: AgvInfo.debug:type_name -> AgvInfo.DebugInfo
	8,  // 8: AgvInfo.agvsInfo:type_name -> CamelSysInfo
	32, // 9: AgvInfo.grpcTask:type_name -> GrpcTaskInfomation
	0,  // 10: UIConfig.language:type_name -> Language
	33, // 11: CamelSysInfo.agvsInfo:type_name -> CamelMessage.AllowFromAgvs
	34, // 12: CamelSysInfo.taskInfo:type_name -> CamelMessage.MissonFromAgvs
	11, // 13: RosNodesCfg.nodes:type_name -> RosNode
	28, // 14: RosoutMsg.messages:type_name -> RosoutMsg.RosoutInfo
	15, // 15: WirlessConfig.config:type_name -> NetworkConfig
	17, // 16: WLANList.wirlessList:type_name -> WirlessInfo
	15, // 17: NetworkConfigCollection.config_collection:type_name -> NetworkConfig
	35, // 18: UpdatePose.error_info:type_name -> Result
	29, // 19: UpdatePose.pose:type_name -> Position
	1,  // 20: AgvInfo.Alarm.type:type_name -> AgvInfo.Alarm.Source
	2,  // 21: AgvInfo.Alarm.level:type_name -> AgvInfo.Alarm.Level
	36, // 22: AgvService.UploadMapData:input_type -> ISeeMap
	36, // 23: AgvService.GetVersion:input_type -> ISeeMap
	37, // 24: AgvService.GetAgvState:input_type -> google.protobuf.Empty
	37, // 25: AgvService.RequestUIConfig:input_type -> google.protobuf.Empty
	37, // 26: AgvService.GetSystemStatus:input_type -> google.protobuf.Empty
	37, // 27: AgvService.GetAgvStateInAgvs:input_type -> google.protobuf.Empty
	38, // 28: AgvService.SendToAgvs:input_type -> CamelMessage
	6,  // 29: AgvService.ControlAgv:input_type -> Operation
	7,  // 30: AgvService.SetCamelCfg:input_type -> CamelCfg
	37, // 31: AgvService.GetCamelCfg:input_type -> google.protobuf.Empty
	37, // 32: AgvService.GetCamelPathCollection:input_type -> google.protobuf.Empty
	34, // 33: AgvService.RoutePlan:input_type -> CamelMessage.MissonFromAgvs
	37, // 34: AgvService.GetRosNodeCfg:input_type -> google.protobuf.Empty
	11, // 35: AgvService.SetRosNodeCfg:input_type -> RosNode
	11, // 36: AgvService.DeleteNodeCfg:input_type -> RosNode
	11, // 37: AgvService.StopRosnode:input_type -> RosNode
	37, // 38: AgvService.GetRosoutMsg:input_type -> google.protobuf.Empty
	39, // 39: AgvService.SetAvoidanceArea:input_type -> AvoidanceAreaCollection
	14, // 40: AgvService.AlarmUpload:input_type -> AlarmMsg
	37, // 41: AgvService.QueryNetworkInformation:input_type -> google.protobuf.Empty
	15, // 42: AgvService.SetNetworkInformation:input_type -> NetworkConfig
	37, // 43: AgvService.SearchWLANList:input_type -> google.protobuf.Empty
	16, // 44: AgvService.ConnectWLAN:input_type -> WirlessConfig
	9,  // 45: AgvService.LogExport:input_type -> LogRequest
	20, // 46: AgvService.SoftwareUpgrade:input_type -> InstallPack
	37, // 47: AgvService.SoftwareBackup:input_type -> google.protobuf.Empty
	20, // 48: AgvService.SoftwareRollback:input_type -> InstallPack
	37, // 49: AgvService.SoftwareDowngrade:input_type -> google.protobuf.Empty
	40, // 50: AgvService.StickControl:input_type -> Gamepad
	41, // 51: AgvService.ApplyStickControl:input_type -> GamepadControl
	42, // 52: AgvService.ModifyMatchPoint:input_type -> MatchPointCommand
	37, // 53: AgvService.GetMatchPoint:input_type -> google.protobuf.Empty
	37, // 54: AgvService.CarRestart:input_type -> google.protobuf.Empty
	22, // 55: AgvService.UpdateStationPose:input_type -> UpdateStation
	43, // 56: AgvService.TaskAllocationOperation:input_type -> GrpcTaskOperation
	44, // 57: AgvService.AssignAllocationTasks:input_type -> GrpcTaskAllocations
	35, // 58: AgvService.UploadMapData:output_type -> Result
	5,  // 59: AgvService.GetVersion:output_type -> Version
	3,  // 60: AgvService.GetAgvState:output_type -> AgvInfo
	4,  // 61: AgvService.RequestUIConfig:output_type -> UIConfig
	21, // 62: AgvService.GetSystemStatus:output_type -> SystemStatus
	8,  // 63: AgvService.GetAgvStateInAgvs:output_type -> CamelSysInfo
	35, // 64: AgvService.SendToAgvs:output_type -> Result
	35, // 65: AgvService.ControlAgv:output_type -> Result
	35, // 66: AgvService.SetCamelCfg:output_type -> Result
	7,  // 67: AgvService.GetCamelCfg:output_type -> CamelCfg
	31, // 68: AgvService.GetCamelPathCollection:output_type -> PathCollection
	37, // 69: AgvService.RoutePlan:output_type -> google.protobuf.Empty
	12, // 70: AgvService.GetRosNodeCfg:output_type -> RosNodesCfg
	35, // 71: AgvService.SetRosNodeCfg:output_type -> Result
	35, // 72: AgvService.DeleteNodeCfg:output_type -> Result
	35, // 73: AgvService.StopRosnode:output_type -> Result
	13, // 74: AgvService.GetRosoutMsg:output_type -> RosoutMsg
	37, // 75: AgvService.SetAvoidanceArea:output_type -> google.protobuf.Empty
	37, // 76: AgvService.AlarmUpload:output_type -> google.protobuf.Empty
	19, // 77: AgvService.QueryNetworkInformation:output_type -> NetworkConfigCollection
	37, // 78: AgvService.SetNetworkInformation:output_type -> google.protobuf.Empty
	18, // 79: AgvService.SearchWLANList:output_type -> WLANList
	35, // 80: AgvService.ConnectWLAN:output_type -> Result
	10, // 81: AgvService.LogExport:output_type -> LogResponse
	35, // 82: AgvService.SoftwareUpgrade:output_type -> Result
	35, // 83: AgvService.SoftwareBackup:output_type -> Result
	35, // 84: AgvService.SoftwareRollback:output_type -> Result
	35, // 85: AgvService.SoftwareDowngrade:output_type -> Result
	35, // 86: AgvService.StickControl:output_type -> Result
	45, // 87: AgvService.ApplyStickControl:output_type -> Token
	35, // 88: AgvService.ModifyMatchPoint:output_type -> Result
	46, // 89: AgvService.GetMatchPoint:output_type -> MatchPoints
	37, // 90: AgvService.CarRestart:output_type -> google.protobuf.Empty
	23, // 91: AgvService.UpdateStationPose:output_type -> UpdatePose
	44, // 92: AgvService.TaskAllocationOperation:output_type -> GrpcTaskAllocations
	35, // 93: AgvService.AssignAllocationTasks:output_type -> Result
	58, // [58:94] is the sub-list for method output_type
	22, // [22:58] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_protobuf_camel_grpc_proto_init() }
func file_protobuf_camel_grpc_proto_init() {
	if File_protobuf_camel_grpc_proto != nil {
		return
	}
	file_protobuf_camel_agvs_proto_init()
	file_protobuf_camel_common_proto_init()
	file_protobuf_camel_db_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protobuf_camel_grpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgvInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CamelCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CamelSysInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RosNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RosNodesCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RosoutMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WirlessConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WirlessInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WLANList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkConfigCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallPack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgvInfo_UIStation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgvInfo_Motion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgvInfo_Alarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgvInfo_DebugInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_grpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RosoutMsg_RosoutInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_camel_grpc_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protobuf_camel_grpc_proto_goTypes,
		DependencyIndexes: file_protobuf_camel_grpc_proto_depIdxs,
		EnumInfos:         file_protobuf_camel_grpc_proto_enumTypes,
		MessageInfos:      file_protobuf_camel_grpc_proto_msgTypes,
	}.Build()
	File_protobuf_camel_grpc_proto = out.File
	file_protobuf_camel_grpc_proto_rawDesc = nil
	file_protobuf_camel_grpc_proto_goTypes = nil
	file_protobuf_camel_grpc_proto_depIdxs = nil
}
