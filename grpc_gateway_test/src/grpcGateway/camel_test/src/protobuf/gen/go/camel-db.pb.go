// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: protobuf/camel-db.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ISeeMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region            *ISeeMap_Region          `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	AreaList          []*ISeeMap_Area          `protobuf:"bytes,2,rep,name=areaList,proto3" json:"areaList,omitempty"`
	PathList          []*ISeeMap_Path          `protobuf:"bytes,3,rep,name=pathList,proto3" json:"pathList,omitempty"`
	StationList       []*ISeeMap_Station       `protobuf:"bytes,4,rep,name=stationList,proto3" json:"stationList,omitempty"`
	ConfigurationList []*ISeeMap_Configuration `protobuf:"bytes,5,rep,name=configurationList,proto3" json:"configurationList,omitempty"`
	TaskActionList    []*ISeeMap_TaskAction    `protobuf:"bytes,6,rep,name=taskActionList,proto3" json:"taskActionList,omitempty"`
	CarMngList        []*ISeeMap_CarManagemet  `protobuf:"bytes,7,rep,name=carMngList,proto3" json:"carMngList,omitempty"`
	CoordOffset       []*ISeeMap_CoordOffset   `protobuf:"bytes,8,rep,name=coordOffset,proto3" json:"coordOffset,omitempty"`
}

func (x *ISeeMap) Reset() {
	*x = ISeeMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_db_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ISeeMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ISeeMap) ProtoMessage() {}

func (x *ISeeMap) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_db_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ISeeMap.ProtoReflect.Descriptor instead.
func (*ISeeMap) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_db_proto_rawDescGZIP(), []int{0}
}

func (x *ISeeMap) GetRegion() *ISeeMap_Region {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *ISeeMap) GetAreaList() []*ISeeMap_Area {
	if x != nil {
		return x.AreaList
	}
	return nil
}

func (x *ISeeMap) GetPathList() []*ISeeMap_Path {
	if x != nil {
		return x.PathList
	}
	return nil
}

func (x *ISeeMap) GetStationList() []*ISeeMap_Station {
	if x != nil {
		return x.StationList
	}
	return nil
}

func (x *ISeeMap) GetConfigurationList() []*ISeeMap_Configuration {
	if x != nil {
		return x.ConfigurationList
	}
	return nil
}

func (x *ISeeMap) GetTaskActionList() []*ISeeMap_TaskAction {
	if x != nil {
		return x.TaskActionList
	}
	return nil
}

func (x *ISeeMap) GetCarMngList() []*ISeeMap_CarManagemet {
	if x != nil {
		return x.CarMngList
	}
	return nil
}

func (x *ISeeMap) GetCoordOffset() []*ISeeMap_CoordOffset {
	if x != nil {
		return x.CoordOffset
	}
	return nil
}

type ISeeMap_Region struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description []byte `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Name        []byte `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	FloorNumber int32  `protobuf:"varint,4,opt,name=floor_number,json=floorNumber,proto3" json:"floor_number,omitempty"`
	Valid       string `protobuf:"bytes,5,opt,name=valid,proto3" json:"valid,omitempty"`
	Lmuser      []byte `protobuf:"bytes,6,opt,name=lmuser,proto3" json:"lmuser,omitempty"`
	MapVersion  []byte `protobuf:"bytes,7,opt,name=mapVersion,proto3" json:"mapVersion,omitempty"`
	Lmdate      string `protobuf:"bytes,8,opt,name=lmdate,proto3" json:"lmdate,omitempty"`
}

func (x *ISeeMap_Region) Reset() {
	*x = ISeeMap_Region{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_db_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ISeeMap_Region) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ISeeMap_Region) ProtoMessage() {}

func (x *ISeeMap_Region) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_db_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ISeeMap_Region.ProtoReflect.Descriptor instead.
func (*ISeeMap_Region) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_db_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ISeeMap_Region) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ISeeMap_Region) GetDescription() []byte {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *ISeeMap_Region) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ISeeMap_Region) GetFloorNumber() int32 {
	if x != nil {
		return x.FloorNumber
	}
	return 0
}

func (x *ISeeMap_Region) GetValid() string {
	if x != nil {
		return x.Valid
	}
	return ""
}

func (x *ISeeMap_Region) GetLmuser() []byte {
	if x != nil {
		return x.Lmuser
	}
	return nil
}

func (x *ISeeMap_Region) GetMapVersion() []byte {
	if x != nil {
		return x.MapVersion
	}
	return nil
}

func (x *ISeeMap_Region) GetLmdate() string {
	if x != nil {
		return x.Lmdate
	}
	return ""
}

type ISeeMap_Area struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                  //Guid
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                              //区域名称
	ForkLiftHeight int32  `protobuf:"varint,3,opt,name=fork_lift_height,json=forkLiftHeight,proto3" json:"fork_lift_height,omitempty"` //区域抬升高度
	RegionId       string `protobuf:"bytes,4,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
}

func (x *ISeeMap_Area) Reset() {
	*x = ISeeMap_Area{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_db_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ISeeMap_Area) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ISeeMap_Area) ProtoMessage() {}

func (x *ISeeMap_Area) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_db_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ISeeMap_Area.ProtoReflect.Descriptor instead.
func (*ISeeMap_Area) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_db_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ISeeMap_Area) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ISeeMap_Area) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ISeeMap_Area) GetForkLiftHeight() int32 {
	if x != nil {
		return x.ForkLiftHeight
	}
	return 0
}

func (x *ISeeMap_Area) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

type ISeeMap_Path struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                    //路径Guid
	FromStationRfid         string  `protobuf:"bytes,2,opt,name=from_station_rfid,json=fromStationRfid,proto3" json:"from_station_rfid,omitempty"` //路径起点rfid
	ToStationRfid           string  `protobuf:"bytes,3,opt,name=to_station_rfid,json=toStationRfid,proto3" json:"to_station_rfid,omitempty"`       //路径终点rfid
	GoalsAngle              float32 `protobuf:"fixed32,4,opt,name=goals_angle,json=goalsAngle,proto3" json:"goals_angle,omitempty"`                //终点角度
	GoalsHeight             float32 `protobuf:"fixed32,5,opt,name=goals_height,json=goalsHeight,proto3" json:"goals_height,omitempty"`             //终点高度
	AngleCompensate         float32 `protobuf:"fixed32,6,opt,name=angle_compensate,json=angleCompensate,proto3" json:"angle_compensate,omitempty"`
	LaserHeadHeight         float32 `protobuf:"fixed32,7,opt,name=laser_head_height,json=laserHeadHeight,proto3" json:"laser_head_height,omitempty"`
	Uncertainty             float32 `protobuf:"fixed32,8,opt,name=uncertainty,proto3" json:"uncertainty,omitempty"`                     //匹配度
	Music                   int32   `protobuf:"varint,9,opt,name=music,proto3" json:"music,omitempty"`                                  //音乐
	DedectZone1             int32   `protobuf:"varint,10,opt,name=dedect_zone1,json=dedectZone1,proto3" json:"dedect_zone1,omitempty"`  //前障
	DedectZone2             int32   `protobuf:"varint,11,opt,name=dedect_zone2,json=dedectZone2,proto3" json:"dedect_zone2,omitempty"`  //后障
	VelocityMax             float32 `protobuf:"fixed32,12,opt,name=velocity_max,json=velocityMax,proto3" json:"velocity_max,omitempty"` //最大速度
	Radius                  float32 `protobuf:"fixed32,13,opt,name=radius,proto3" json:"radius,omitempty"`                              //半径
	DestinationRange        float32 `protobuf:"fixed32,14,opt,name=destination_range,json=destinationRange,proto3" json:"destination_range,omitempty"`
	DistanceZoneInterchange float32 `protobuf:"fixed32,15,opt,name=distance_zone_interchange,json=distanceZoneInterchange,proto3" json:"distance_zone_interchange,omitempty"` //障碍物切换距离
	IsRunning               int32   `protobuf:"varint,16,opt,name=is_running,json=isRunning,proto3" json:"is_running,omitempty"`                                              //是否可用
	HeightStep              int32   `protobuf:"varint,17,opt,name=height_step,json=heightStep,proto3" json:"height_step,omitempty"`
	Cargo                   int32   `protobuf:"varint,18,opt,name=cargo,proto3" json:"cargo,omitempty"`
	DrivingDirection        int32   `protobuf:"varint,19,opt,name=driving_direction,json=drivingDirection,proto3" json:"driving_direction,omitempty"` //行驶方向
	Distance                float32 `protobuf:"fixed32,20,opt,name=distance,proto3" json:"distance,omitempty"`                                        //距离
	Flag                    string  `protobuf:"bytes,21,opt,name=flag,proto3" json:"flag,omitempty"`
	Lmdate                  string  `protobuf:"bytes,22,opt,name=lmdate,proto3" json:"lmdate,omitempty"` //更新时间
	RegionId                string  `protobuf:"bytes,23,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	TransitAction           string  `protobuf:"bytes,24,opt,name=transit_action,json=transitAction,proto3" json:"transit_action,omitempty"`       //path不是路线的起始或者终点path时执行的动作集合,json字符串
	EnterAction             string  `protobuf:"bytes,25,opt,name=enter_action,json=enterAction,proto3" json:"enter_action,omitempty"`             //path是路线的终点路径时执行的动作集合,json字符串
	ExitAction              string  `protobuf:"bytes,26,opt,name=exit_action,json=exitAction,proto3" json:"exit_action,omitempty"`                //path是路线的起始路径时执行的动作集合,json字符串
	AllowAutoAvoid          bool    `protobuf:"varint,27,opt,name=allow_auto_avoid,json=allowAutoAvoid,proto3" json:"allow_auto_avoid,omitempty"` //true：允许自动避障 false: 不允许自动避障，只能路径跟随
	CarType                 string  `protobuf:"bytes,28,opt,name=car_type,json=carType,proto3" json:"car_type,omitempty"`                         //路径允许通过的车型，多个车型间用逗号隔开
}

func (x *ISeeMap_Path) Reset() {
	*x = ISeeMap_Path{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_db_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ISeeMap_Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ISeeMap_Path) ProtoMessage() {}

func (x *ISeeMap_Path) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_db_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ISeeMap_Path.ProtoReflect.Descriptor instead.
func (*ISeeMap_Path) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_db_proto_rawDescGZIP(), []int{0, 2}
}

func (x *ISeeMap_Path) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ISeeMap_Path) GetFromStationRfid() string {
	if x != nil {
		return x.FromStationRfid
	}
	return ""
}

func (x *ISeeMap_Path) GetToStationRfid() string {
	if x != nil {
		return x.ToStationRfid
	}
	return ""
}

func (x *ISeeMap_Path) GetGoalsAngle() float32 {
	if x != nil {
		return x.GoalsAngle
	}
	return 0
}

func (x *ISeeMap_Path) GetGoalsHeight() float32 {
	if x != nil {
		return x.GoalsHeight
	}
	return 0
}

func (x *ISeeMap_Path) GetAngleCompensate() float32 {
	if x != nil {
		return x.AngleCompensate
	}
	return 0
}

func (x *ISeeMap_Path) GetLaserHeadHeight() float32 {
	if x != nil {
		return x.LaserHeadHeight
	}
	return 0
}

func (x *ISeeMap_Path) GetUncertainty() float32 {
	if x != nil {
		return x.Uncertainty
	}
	return 0
}

func (x *ISeeMap_Path) GetMusic() int32 {
	if x != nil {
		return x.Music
	}
	return 0
}

func (x *ISeeMap_Path) GetDedectZone1() int32 {
	if x != nil {
		return x.DedectZone1
	}
	return 0
}

func (x *ISeeMap_Path) GetDedectZone2() int32 {
	if x != nil {
		return x.DedectZone2
	}
	return 0
}

func (x *ISeeMap_Path) GetVelocityMax() float32 {
	if x != nil {
		return x.VelocityMax
	}
	return 0
}

func (x *ISeeMap_Path) GetRadius() float32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *ISeeMap_Path) GetDestinationRange() float32 {
	if x != nil {
		return x.DestinationRange
	}
	return 0
}

func (x *ISeeMap_Path) GetDistanceZoneInterchange() float32 {
	if x != nil {
		return x.DistanceZoneInterchange
	}
	return 0
}

func (x *ISeeMap_Path) GetIsRunning() int32 {
	if x != nil {
		return x.IsRunning
	}
	return 0
}

func (x *ISeeMap_Path) GetHeightStep() int32 {
	if x != nil {
		return x.HeightStep
	}
	return 0
}

func (x *ISeeMap_Path) GetCargo() int32 {
	if x != nil {
		return x.Cargo
	}
	return 0
}

func (x *ISeeMap_Path) GetDrivingDirection() int32 {
	if x != nil {
		return x.DrivingDirection
	}
	return 0
}

func (x *ISeeMap_Path) GetDistance() float32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *ISeeMap_Path) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *ISeeMap_Path) GetLmdate() string {
	if x != nil {
		return x.Lmdate
	}
	return ""
}

func (x *ISeeMap_Path) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *ISeeMap_Path) GetTransitAction() string {
	if x != nil {
		return x.TransitAction
	}
	return ""
}

func (x *ISeeMap_Path) GetEnterAction() string {
	if x != nil {
		return x.EnterAction
	}
	return ""
}

func (x *ISeeMap_Path) GetExitAction() string {
	if x != nil {
		return x.ExitAction
	}
	return ""
}

func (x *ISeeMap_Path) GetAllowAutoAvoid() bool {
	if x != nil {
		return x.AllowAutoAvoid
	}
	return false
}

func (x *ISeeMap_Path) GetCarType() string {
	if x != nil {
		return x.CarType
	}
	return ""
}

type ISeeMap_Station struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                      //站点Guid
	StationRfid string  `protobuf:"bytes,2,opt,name=station_rfid,json=stationRfid,proto3" json:"station_rfid,omitempty"` //站点rfid
	StationName string  `protobuf:"bytes,3,opt,name=station_name,json=stationName,proto3" json:"station_name,omitempty"` //站点名
	StationType string  `protobuf:"bytes,4,opt,name=station_type,json=stationType,proto3" json:"station_type,omitempty"` //站点类型
	SpaceX      float32 `protobuf:"fixed32,5,opt,name=space_x,json=spaceX,proto3" json:"space_x,omitempty"`              //横坐标
	SpaceY      float32 `protobuf:"fixed32,6,opt,name=space_y,json=spaceY,proto3" json:"space_y,omitempty"`              //纵坐标
	ZAxis       float32 `protobuf:"fixed32,7,opt,name=z_axis,json=zAxis,proto3" json:"z_axis,omitempty"`                 //高度
	RelatedId   string  `protobuf:"bytes,8,opt,name=related_id,json=relatedId,proto3" json:"related_id,omitempty"`       //所属区域
	Flag        string  `protobuf:"bytes,9,opt,name=flag,proto3" json:"flag,omitempty"`
	Lmdate      string  `protobuf:"bytes,10,opt,name=lmdate,proto3" json:"lmdate,omitempty"` //更新时间
	RegionId    string  `protobuf:"bytes,11,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	QRId        uint32  `protobuf:"varint,12,opt,name=QR_id,json=QRId,proto3" json:"QR_id,omitempty"`
	QRAngle     float32 `protobuf:"fixed32,13,opt,name=QR_angle,json=QRAngle,proto3" json:"QR_angle,omitempty"`
}

func (x *ISeeMap_Station) Reset() {
	*x = ISeeMap_Station{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_db_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ISeeMap_Station) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ISeeMap_Station) ProtoMessage() {}

func (x *ISeeMap_Station) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_db_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ISeeMap_Station.ProtoReflect.Descriptor instead.
func (*ISeeMap_Station) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_db_proto_rawDescGZIP(), []int{0, 3}
}

func (x *ISeeMap_Station) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ISeeMap_Station) GetStationRfid() string {
	if x != nil {
		return x.StationRfid
	}
	return ""
}

func (x *ISeeMap_Station) GetStationName() string {
	if x != nil {
		return x.StationName
	}
	return ""
}

func (x *ISeeMap_Station) GetStationType() string {
	if x != nil {
		return x.StationType
	}
	return ""
}

func (x *ISeeMap_Station) GetSpaceX() float32 {
	if x != nil {
		return x.SpaceX
	}
	return 0
}

func (x *ISeeMap_Station) GetSpaceY() float32 {
	if x != nil {
		return x.SpaceY
	}
	return 0
}

func (x *ISeeMap_Station) GetZAxis() float32 {
	if x != nil {
		return x.ZAxis
	}
	return 0
}

func (x *ISeeMap_Station) GetRelatedId() string {
	if x != nil {
		return x.RelatedId
	}
	return ""
}

func (x *ISeeMap_Station) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *ISeeMap_Station) GetLmdate() string {
	if x != nil {
		return x.Lmdate
	}
	return ""
}

func (x *ISeeMap_Station) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *ISeeMap_Station) GetQRId() uint32 {
	if x != nil {
		return x.QRId
	}
	return 0
}

func (x *ISeeMap_Station) GetQRAngle() float32 {
	if x != nil {
		return x.QRAngle
	}
	return 0
}

type ISeeMap_Configuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaName                string `protobuf:"bytes,1,opt,name=area_name,json=areaName,proto3" json:"area_name,omitempty"` //区域
	TaskType                string `protobuf:"bytes,2,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	Section                 int32  `protobuf:"varint,3,opt,name=section,proto3" json:"section,omitempty"`
	LaserHeadHeight         int32  `protobuf:"varint,4,opt,name=laser_head_height,json=laserHeadHeight,proto3" json:"laser_head_height,omitempty"`
	DedectZone1             int32  `protobuf:"varint,5,opt,name=dedect_zone1,json=dedectZone1,proto3" json:"dedect_zone1,omitempty"`                                       //前障
	DedectZone2             int32  `protobuf:"varint,6,opt,name=dedect_zone2,json=dedectZone2,proto3" json:"dedect_zone2,omitempty"`                                       //后障
	DistanceZoneInterchange int32  `protobuf:"varint,7,opt,name=distance_zone_interchange,json=distanceZoneInterchange,proto3" json:"distance_zone_interchange,omitempty"` //障碍物切换距离
	DestinationRange        int32  `protobuf:"varint,8,opt,name=destination_range,json=destinationRange,proto3" json:"destination_range,omitempty"`
	HeightStep              int32  `protobuf:"varint,9,opt,name=height_step,json=heightStep,proto3" json:"height_step,omitempty"`
	Cargo                   int32  `protobuf:"varint,10,opt,name=cargo,proto3" json:"cargo,omitempty"`
}

func (x *ISeeMap_Configuration) Reset() {
	*x = ISeeMap_Configuration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_db_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ISeeMap_Configuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ISeeMap_Configuration) ProtoMessage() {}

func (x *ISeeMap_Configuration) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_db_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ISeeMap_Configuration.ProtoReflect.Descriptor instead.
func (*ISeeMap_Configuration) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_db_proto_rawDescGZIP(), []int{0, 4}
}

func (x *ISeeMap_Configuration) GetAreaName() string {
	if x != nil {
		return x.AreaName
	}
	return ""
}

func (x *ISeeMap_Configuration) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *ISeeMap_Configuration) GetSection() int32 {
	if x != nil {
		return x.Section
	}
	return 0
}

func (x *ISeeMap_Configuration) GetLaserHeadHeight() int32 {
	if x != nil {
		return x.LaserHeadHeight
	}
	return 0
}

func (x *ISeeMap_Configuration) GetDedectZone1() int32 {
	if x != nil {
		return x.DedectZone1
	}
	return 0
}

func (x *ISeeMap_Configuration) GetDedectZone2() int32 {
	if x != nil {
		return x.DedectZone2
	}
	return 0
}

func (x *ISeeMap_Configuration) GetDistanceZoneInterchange() int32 {
	if x != nil {
		return x.DistanceZoneInterchange
	}
	return 0
}

func (x *ISeeMap_Configuration) GetDestinationRange() int32 {
	if x != nil {
		return x.DestinationRange
	}
	return 0
}

func (x *ISeeMap_Configuration) GetHeightStep() int32 {
	if x != nil {
		return x.HeightStep
	}
	return 0
}

func (x *ISeeMap_Configuration) GetCargo() int32 {
	if x != nil {
		return x.Cargo
	}
	return 0
}

type ISeeMap_TaskAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionName  []byte `protobuf:"bytes,1,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`    //wcs 中定义的起点和终点的FromAction ToAction
	EnterAction string `protobuf:"bytes,2,opt,name=enter_action,json=enterAction,proto3" json:"enter_action,omitempty"` //当进入时需要执行的动作集合，json字符串
	ExitAction  string `protobuf:"bytes,3,opt,name=exit_action,json=exitAction,proto3" json:"exit_action,omitempty"`    //当离开时需要执行的动作集合，json字符串
}

func (x *ISeeMap_TaskAction) Reset() {
	*x = ISeeMap_TaskAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_db_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ISeeMap_TaskAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ISeeMap_TaskAction) ProtoMessage() {}

func (x *ISeeMap_TaskAction) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_db_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ISeeMap_TaskAction.ProtoReflect.Descriptor instead.
func (*ISeeMap_TaskAction) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_db_proto_rawDescGZIP(), []int{0, 5}
}

func (x *ISeeMap_TaskAction) GetActionName() []byte {
	if x != nil {
		return x.ActionName
	}
	return nil
}

func (x *ISeeMap_TaskAction) GetEnterAction() string {
	if x != nil {
		return x.EnterAction
	}
	return ""
}

func (x *ISeeMap_TaskAction) GetExitAction() string {
	if x != nil {
		return x.ExitAction
	}
	return ""
}

type ISeeMap_CarManagemet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                  //小车guid
	Name           []byte  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                              //小车名称
	Number         int32   `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`                                         //小车编号
	Mac            string  `protobuf:"bytes,4,opt,name=mac,proto3" json:"mac,omitempty"`                                                //小车mac地址
	Ip             string  `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip,omitempty"`                                                  //小车ip
	CarType        []byte  `protobuf:"bytes,6,opt,name=car_type,json=carType,proto3" json:"car_type,omitempty"`                         //车型
	Battery        string  `protobuf:"bytes,7,opt,name=battery,proto3" json:"battery,omitempty"`                                        //电池容量 ，数字
	RatedLoad      float64 `protobuf:"fixed64,8,opt,name=rated_load,json=ratedLoad,proto3" json:"rated_load,omitempty"`                 //载重，吨
	Length         float64 `protobuf:"fixed64,9,opt,name=length,proto3" json:"length,omitempty"`                                        //长
	Width          float64 `protobuf:"fixed64,10,opt,name=width,proto3" json:"width,omitempty"`                                         //宽
	Margin         float64 `protobuf:"fixed64,11,opt,name=margin,proto3" json:"margin,omitempty"`                                       //安全距离
	ReferencePoint float64 `protobuf:"fixed64,12,opt,name=reference_point,json=referencePoint,proto3" json:"reference_point,omitempty"` //运动中心到车尾距离
	RunTime        int32   `protobuf:"varint,13,opt,name=run_time,json=runTime,proto3" json:"run_time,omitempty"`                       //是否运行
	Valid          string  `protobuf:"bytes,14,opt,name=valid,proto3" json:"valid,omitempty"`                                           //是否有效
	Lmuser         string  `protobuf:"bytes,15,opt,name=lmuser,proto3" json:"lmuser,omitempty"`                                         //创建更新人
	Lmdate         string  `protobuf:"bytes,16,opt,name=lmdate,proto3" json:"lmdate,omitempty"`                                         //创建更新时间
}

func (x *ISeeMap_CarManagemet) Reset() {
	*x = ISeeMap_CarManagemet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_db_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ISeeMap_CarManagemet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ISeeMap_CarManagemet) ProtoMessage() {}

func (x *ISeeMap_CarManagemet) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_db_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ISeeMap_CarManagemet.ProtoReflect.Descriptor instead.
func (*ISeeMap_CarManagemet) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_db_proto_rawDescGZIP(), []int{0, 6}
}

func (x *ISeeMap_CarManagemet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ISeeMap_CarManagemet) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ISeeMap_CarManagemet) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *ISeeMap_CarManagemet) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *ISeeMap_CarManagemet) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ISeeMap_CarManagemet) GetCarType() []byte {
	if x != nil {
		return x.CarType
	}
	return nil
}

func (x *ISeeMap_CarManagemet) GetBattery() string {
	if x != nil {
		return x.Battery
	}
	return ""
}

func (x *ISeeMap_CarManagemet) GetRatedLoad() float64 {
	if x != nil {
		return x.RatedLoad
	}
	return 0
}

func (x *ISeeMap_CarManagemet) GetLength() float64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *ISeeMap_CarManagemet) GetWidth() float64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ISeeMap_CarManagemet) GetMargin() float64 {
	if x != nil {
		return x.Margin
	}
	return 0
}

func (x *ISeeMap_CarManagemet) GetReferencePoint() float64 {
	if x != nil {
		return x.ReferencePoint
	}
	return 0
}

func (x *ISeeMap_CarManagemet) GetRunTime() int32 {
	if x != nil {
		return x.RunTime
	}
	return 0
}

func (x *ISeeMap_CarManagemet) GetValid() string {
	if x != nil {
		return x.Valid
	}
	return ""
}

func (x *ISeeMap_CarManagemet) GetLmuser() string {
	if x != nil {
		return x.Lmuser
	}
	return ""
}

func (x *ISeeMap_CarManagemet) GetLmdate() string {
	if x != nil {
		return x.Lmdate
	}
	return ""
}

type ISeeMap_CoordOffset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StationName string  `protobuf:"bytes,1,opt,name=station_name,json=stationName,proto3" json:"station_name,omitempty"` // 站点名称S1
	X           float32 `protobuf:"fixed32,2,opt,name=x,proto3" json:"x,omitempty"`                                      // x方向的补偿
	Y           float32 `protobuf:"fixed32,3,opt,name=y,proto3" json:"y,omitempty"`                                      // y方向的补偿
}

func (x *ISeeMap_CoordOffset) Reset() {
	*x = ISeeMap_CoordOffset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_camel_db_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ISeeMap_CoordOffset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ISeeMap_CoordOffset) ProtoMessage() {}

func (x *ISeeMap_CoordOffset) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_camel_db_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ISeeMap_CoordOffset.ProtoReflect.Descriptor instead.
func (*ISeeMap_CoordOffset) Descriptor() ([]byte, []int) {
	return file_protobuf_camel_db_proto_rawDescGZIP(), []int{0, 7}
}

func (x *ISeeMap_CoordOffset) GetStationName() string {
	if x != nil {
		return x.StationName
	}
	return ""
}

func (x *ISeeMap_CoordOffset) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *ISeeMap_CoordOffset) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

var File_protobuf_camel_db_proto protoreflect.FileDescriptor

var file_protobuf_camel_db_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x61, 0x6d, 0x65, 0x6c,
	0x2d, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x61, 0x6d, 0x65, 0x6c,
	0x2e, 0x61, 0x70, 0x69, 0x22, 0xbf, 0x18, 0x0a, 0x07, 0x49, 0x53, 0x65, 0x65, 0x4d, 0x61, 0x70,
	0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x53, 0x65,
	0x65, 0x4d, 0x61, 0x70, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x08, 0x61, 0x72, 0x65, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x6c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x49, 0x53, 0x65, 0x65, 0x4d, 0x61, 0x70, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52, 0x08,
	0x61, 0x72, 0x65, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x61, 0x74, 0x68,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x61, 0x6d,
	0x65, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x53, 0x65, 0x65, 0x4d, 0x61, 0x70, 0x2e, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x08, 0x70, 0x61, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49,
	0x53, 0x65, 0x65, 0x4d, 0x61, 0x70, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x11, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x6c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x49, 0x53, 0x65, 0x65, 0x4d, 0x61, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0e, 0x74,
	0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x49, 0x53, 0x65, 0x65, 0x4d, 0x61, 0x70, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x4d, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x6c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x49, 0x53, 0x65, 0x65, 0x4d, 0x61, 0x70, 0x2e, 0x43, 0x61, 0x72, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x74, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x4d, 0x6e, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x6c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x53, 0x65, 0x65, 0x4d, 0x61, 0x70, 0x2e, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x1a, 0xd7, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x6c,
	0x6f, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x6d, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x6c, 0x6d, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x70, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x61, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6d, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6d, 0x64, 0x61, 0x74, 0x65, 0x1a,
	0x71, 0x0a, 0x04, 0x41, 0x72, 0x65, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x66,
	0x6f, 0x72, 0x6b, 0x5f, 0x6c, 0x69, 0x66, 0x74, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x6f, 0x72, 0x6b, 0x4c, 0x69, 0x66, 0x74, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x1a, 0xbf, 0x07, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x66, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x66, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x66, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x66, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x67, 0x6f, 0x61, 0x6c, 0x73, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x67, 0x6f, 0x61, 0x6c, 0x73, 0x41, 0x6e, 0x67, 0x6c, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x67, 0x6f, 0x61, 0x6c, 0x73, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x67, 0x6f, 0x61, 0x6c, 0x73, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x65, 0x6e, 0x73, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x61,
	0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x6e, 0x73, 0x61, 0x74, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x6c, 0x61, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x65, 0x72,
	0x48, 0x65, 0x61, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e,
	0x63, 0x65, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0b, 0x75, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x75, 0x73,
	0x69, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x64, 0x65, 0x63, 0x74, 0x5f, 0x7a, 0x6f, 0x6e,
	0x65, 0x31, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x64, 0x65, 0x63, 0x74,
	0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x64, 0x65, 0x63, 0x74, 0x5f,
	0x7a, 0x6f, 0x6e, 0x65, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x64,
	0x65, 0x63, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x32, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x6c, 0x6f,
	0x63, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b,
	0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x64,
	0x69, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x3a, 0x0a, 0x19, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x7a, 0x6f, 0x6e,
	0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x17, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5a, 0x6f, 0x6e,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x69, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74, 0x65, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x61, 0x72, 0x67, 0x6f, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x61, 0x72,
	0x67, 0x6f, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x72, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x64,
	0x72, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x6c, 0x61, 0x67, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x6d, 0x64, 0x61, 0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x6d, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x28, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x61, 0x76,
	0x6f, 0x69, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x41, 0x75, 0x74, 0x6f, 0x41, 0x76, 0x6f, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x1a, 0xe3, 0x02, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x66, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x66, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x58, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x73, 0x70, 0x61, 0x63, 0x65, 0x59, 0x12, 0x15, 0x0a, 0x06, 0x7a,
	0x5f, 0x61, 0x78, 0x69, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x7a, 0x41, 0x78,
	0x69, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6d, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6d, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x51, 0x52,
	0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x51, 0x52, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x51, 0x52, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x07, 0x51, 0x52, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x1a, 0xf5, 0x02, 0x0a, 0x0d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x72, 0x65, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61,
	0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6c, 0x61, 0x73,
	0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x65, 0x64, 0x65, 0x63, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x31, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x64, 0x65, 0x63, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x31, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x65, 0x64, 0x65, 0x63, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x32, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x64, 0x65, 0x63, 0x74, 0x5a, 0x6f, 0x6e,
	0x65, 0x32, 0x12, 0x3a, 0x0a, 0x19, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x7a,
	0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5a,
	0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2b,
	0x0a, 0x11, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74, 0x65, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x61, 0x72, 0x67, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x61, 0x72,
	0x67, 0x6f, 0x1a, 0x71, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x69, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x90, 0x03, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x61, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x12, 0x27,
	0x0a, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x75, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6d, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6d, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6d, 0x64, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6c, 0x6d, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x4c, 0x0a, 0x0b, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_camel_db_proto_rawDescOnce sync.Once
	file_protobuf_camel_db_proto_rawDescData = file_protobuf_camel_db_proto_rawDesc
)

func file_protobuf_camel_db_proto_rawDescGZIP() []byte {
	file_protobuf_camel_db_proto_rawDescOnce.Do(func() {
		file_protobuf_camel_db_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_camel_db_proto_rawDescData)
	})
	return file_protobuf_camel_db_proto_rawDescData
}

var file_protobuf_camel_db_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_protobuf_camel_db_proto_goTypes = []interface{}{
	(*ISeeMap)(nil),               // 0: camel.api.ISeeMap
	(*ISeeMap_Region)(nil),        // 1: camel.api.ISeeMap.Region
	(*ISeeMap_Area)(nil),          // 2: camel.api.ISeeMap.Area
	(*ISeeMap_Path)(nil),          // 3: camel.api.ISeeMap.Path
	(*ISeeMap_Station)(nil),       // 4: camel.api.ISeeMap.Station
	(*ISeeMap_Configuration)(nil), // 5: camel.api.ISeeMap.Configuration
	(*ISeeMap_TaskAction)(nil),    // 6: camel.api.ISeeMap.TaskAction
	(*ISeeMap_CarManagemet)(nil),  // 7: camel.api.ISeeMap.CarManagemet
	(*ISeeMap_CoordOffset)(nil),   // 8: camel.api.ISeeMap.CoordOffset
}
var file_protobuf_camel_db_proto_depIdxs = []int32{
	1, // 0: camel.api.ISeeMap.region:type_name -> camel.api.ISeeMap.Region
	2, // 1: camel.api.ISeeMap.areaList:type_name -> camel.api.ISeeMap.Area
	3, // 2: camel.api.ISeeMap.pathList:type_name -> camel.api.ISeeMap.Path
	4, // 3: camel.api.ISeeMap.stationList:type_name -> camel.api.ISeeMap.Station
	5, // 4: camel.api.ISeeMap.configurationList:type_name -> camel.api.ISeeMap.Configuration
	6, // 5: camel.api.ISeeMap.taskActionList:type_name -> camel.api.ISeeMap.TaskAction
	7, // 6: camel.api.ISeeMap.carMngList:type_name -> camel.api.ISeeMap.CarManagemet
	8, // 7: camel.api.ISeeMap.coordOffset:type_name -> camel.api.ISeeMap.CoordOffset
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_protobuf_camel_db_proto_init() }
func file_protobuf_camel_db_proto_init() {
	if File_protobuf_camel_db_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protobuf_camel_db_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ISeeMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_db_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ISeeMap_Region); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_db_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ISeeMap_Area); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_db_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ISeeMap_Path); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_db_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ISeeMap_Station); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_db_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ISeeMap_Configuration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_db_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ISeeMap_TaskAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_db_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ISeeMap_CarManagemet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_camel_db_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ISeeMap_CoordOffset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_camel_db_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protobuf_camel_db_proto_goTypes,
		DependencyIndexes: file_protobuf_camel_db_proto_depIdxs,
		MessageInfos:      file_protobuf_camel_db_proto_msgTypes,
	}.Build()
	File_protobuf_camel_db_proto = out.File
	file_protobuf_camel_db_proto_rawDesc = nil
	file_protobuf_camel_db_proto_goTypes = nil
	file_protobuf_camel_db_proto_depIdxs = nil
}
